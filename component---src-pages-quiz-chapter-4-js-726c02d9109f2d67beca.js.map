{"version":3,"file":"component---src-pages-quiz-chapter-4-js-726c02d9109f2d67beca.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/quiz-chapter-4.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children, isFullWidth = false }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\r\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        {!isFullWidth && (\r\n          <footer\r\n            style={{\r\n              marginTop: `var(--space-5)`,\r\n              fontSize: `var(--font-sm)`,\r\n              color: \"#888\",\r\n            }}\r\n          >\r\n            © {new Date().getFullYear()} · Built for AWS AI learners\r\n          </footer>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// src/components/seo.js\r\nimport * as React from \"react\"\r\n\r\nexport function Head({ title, description = \"\" }) {\r\n  const siteTitle = \"AWS AI Study Guide\"\r\n  const siteDescription = description || \"Interactive learning for AWS AI\"\r\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\r\n  const author = \"Aneesh Mussim\"\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\r\n      <meta name=\"description\" content={siteDescription} />\r\n      <meta property=\"og:title\" content={title || siteTitle} />\r\n      <meta property=\"og:description\" content={siteDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"twitter:title\" content={title || siteTitle} />\r\n      <meta name=\"twitter:description\" content={siteDescription} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Head } from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nfunction shuffleArray(array) {\r\n    return [...array].sort(() => Math.random() - 0.5)\r\n  }\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  color: #00ff90;\r\n  font-family: \"Courier New\", monospace;\r\n  padding: 3rem 2rem;\r\n  min-height: 100vh;\r\n\r\n  h1 {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .question {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  button {\r\n    background: #00ff90;\r\n    color: black;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    margin-top: 1rem;\r\n    margin-right: 1rem;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    transition: background 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #00cc70;\r\n    }\r\n  }\r\n\r\n  .feedback {\r\n    margin-top: 1rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .review {\r\n    margin-top: 2rem;\r\n    background: #111;\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    border: 1px solid #00ff90;\r\n  }\r\n\r\n  .correct {\r\n    color: #00ff90;\r\n  }\r\n  .wrong {\r\n    color: red;\r\n  }\r\n`\r\n\r\nconst allQuestions = [\r\n\r\n    {\r\n        question: \"What is the main role of a hidden layer in a neural network?\",\r\n        options: [\"Receive input\", \"Perform non-linear transformations\", \"Output predictions\", \"Store weights\"],\r\n        answer: \"Perform non-linear transformations\",\r\n        explanation: \"Hidden layers transform inputs using learned weights and activation functions to extract features.\"\r\n      },\r\n      {\r\n        question: \"Which activation function outputs values between 0 and 1?\",\r\n        options: [\"ReLU\", \"Tanh\", \"Sigmoid\", \"Softmax\"],\r\n        answer: \"Sigmoid\",\r\n        explanation: \"The sigmoid function maps input to a range between 0 and 1, useful for binary classification.\"\r\n      },\r\n      {\r\n        question: \"What does backpropagation update?\",\r\n        options: [\"Neuron count\", \"Data format\", \"Weights and biases\", \"Epoch count\"],\r\n        answer: \"Weights and biases\",\r\n        explanation: \"Backpropagation uses gradient descent to update weights and biases to minimize the loss.\"\r\n      },\r\n      {\r\n        question: \"What is overfitting?\",\r\n        options: [\"Model too simple\", \"Model fails to learn\", \"Model performs poorly on training data\", \"Model memorizes training data\"],\r\n        answer: \"Model memorizes training data\",\r\n        explanation: \"Overfitting means the model learns patterns too precisely, failing to generalize to new data.\"\r\n      },\r\n      {\r\n        question: \"Which optimizer adapts learning rate during training?\",\r\n        options: [\"SGD\", \"Momentum\", \"Adam\", \"Batch\"],\r\n        answer: \"Adam\",\r\n        explanation: \"Adam optimizer adjusts the learning rate for each parameter dynamically during training.\"\r\n      },\r\n      {\r\n        question: \"What is dropout used for?\",\r\n        options: [\"Improving inference speed\", \"Reducing dataset size\", \"Preventing overfitting\", \"Improving accuracy directly\"],\r\n        answer: \"Preventing overfitting\",\r\n        explanation: \"Dropout randomly disables neurons during training to prevent reliance on specific features.\"\r\n      },\r\n      {\r\n        question: \"Which layer connects every neuron to the previous layer's outputs?\",\r\n        options: [\"Recurrent\", \"Convolutional\", \"Pooling\", \"Dense\"],\r\n        answer: \"Dense\",\r\n        explanation: \"Dense (fully connected) layers connect each input to every neuron in the layer.\"\r\n      },\r\n      {\r\n        question: \"What is the output of a softmax layer?\",\r\n        options: [\"Logits\", \"Binary output\", \"Class probabilities\", \"Errors\"],\r\n        answer: \"Class probabilities\",\r\n        explanation: \"Softmax turns logits into a probability distribution summing to 1 across classes.\"\r\n      },\r\n      {\r\n        question: \"Which loss function is best for regression problems?\",\r\n        options: [\"Cross-entropy\", \"Hinge loss\", \"Mean Squared Error\", \"Sparse categorical\"],\r\n        answer: \"Mean Squared Error\",\r\n        explanation: \"MSE penalizes large differences between predicted and true values in continuous tasks.\"\r\n      },\r\n      {\r\n        question: \"What is an epoch?\",\r\n        options: [\"One batch\", \"Subset of data\", \"One pass over training set\", \"Evaluation loop\"],\r\n        answer: \"One pass over training set\",\r\n        explanation: \"An epoch is one complete iteration through the entire dataset during training.\"\r\n      },\r\n      {\r\n        question: \"A facial recognition model learns to match only specific people from the training set. What’s the issue?\",\r\n        options: [\"Good generalization\", \"Underfitting\", \"Overfitting\", \"Hyperparameter tuning\"],\r\n        answer: \"Overfitting\",\r\n        explanation: \"The model learned exact features without generalizing to new faces — classic overfitting.\"\r\n      },\r\n      {\r\n        question: \"An e-commerce recommendation model outputs all items equally. Which issue is likely?\",\r\n        options: [\"Overfitting\", \"Poor activation\", \"Untrained output layer\", \"Missing softmax\"],\r\n        answer: \"Missing softmax\",\r\n        explanation: \"Without softmax, raw scores can’t be interpreted as meaningful probabilities.\"\r\n      },\r\n      {\r\n        question: \"Which activation function is preferred in deep image networks?\",\r\n        options: [\"Sigmoid\", \"Softmax\", \"ReLU\", \"Linear\"],\r\n        answer: \"ReLU\",\r\n        explanation: \"ReLU is simple and efficient, helping deep CNNs avoid vanishing gradients.\"\r\n      },\r\n      {\r\n        question: \"A voice assistant model predicts gibberish. The training data had lots of noise. What’s the likely fix?\",\r\n        options: [\"Add dropout\", \"Use more layers\", \"Clean data better\", \"Lower learning rate\"],\r\n        answer: \"Clean data better\",\r\n        explanation: \"Poor-quality training data leads to noisy and unreliable model outputs.\"\r\n      },\r\n      {\r\n        question: \"A model for stock price prediction always predicts the average price. What’s likely wrong?\",\r\n        options: [\"Low variance\", \"Poor activation\", \"Too shallow\", \"Underfitting\"],\r\n        answer: \"Underfitting\",\r\n        explanation: \"If predictions stay near the mean, the model likely hasn't learned key patterns.\"\r\n      },\r\n      {\r\n        question: \"Why use neural networks in medical image diagnosis?\",\r\n        options: [\"Random sampling\", \"Pattern matching and feature detection\", \"Speed\", \"Fewer labels\"],\r\n        answer: \"Pattern matching and feature detection\",\r\n        explanation: \"Neural networks can spot subtle visual features, useful in X-ray or MRI diagnosis.\"\r\n      },\r\n      {\r\n        question: \"What architecture would you likely use for time series forecasting?\",\r\n        options: [\"CNN\", \"RNN\", \"Dense only\", \"GAN\"],\r\n        answer: \"RNN\",\r\n        explanation: \"Recurrent Neural Networks are designed to learn from sequential data like time series.\"\r\n      },\r\n      {\r\n        question: \"Why might you freeze layers in a neural network during training?\",\r\n        options: [\"Speed up inference\", \"Reuse learned features\", \"Apply softmax\", \"Reduce accuracy\"],\r\n        answer: \"Reuse learned features\",\r\n        explanation: \"Freezing layers allows you to use pre-trained weights (transfer learning) as feature extractors.\"\r\n      },\r\n      {\r\n        question: \"Which type of layer is best for extracting spatial features in images?\",\r\n        options: [\"RNN\", \"Dense\", \"Convolutional\", \"Softmax\"],\r\n        answer: \"Convolutional\",\r\n        explanation: \"Convolutional layers detect local patterns like edges and shapes in images.\"\r\n      },\r\n      {\r\n        question: \"You want a model that learns whether customer reviews are positive/negative. Which final activation?\",\r\n        options: [\"Tanh\", \"Softmax\", \"Sigmoid\", \"None\"],\r\n        answer: \"Sigmoid\",\r\n        explanation: \"Sigmoid outputs a probability between 0 and 1 for binary classification tasks.\"\r\n      }\r\n    ]\r\n    \r\n        \r\n         \r\n\r\n\r\nexport default function QuizChapter3() {\r\n  const [questions] = React.useState(() => [...allQuestions].sort(() => Math.random() - 0.5))\r\n  const [current, setCurrent] = React.useState(0)\r\n  const [selected, setSelected] = React.useState(null)\r\n  const [score, setScore] = React.useState(0)\r\n  const [showResult, setShowResult] = React.useState(false)\r\n  const [answers, setAnswers] = React.useState([])\r\n\r\n  const currentQ = questions[current]\r\n\r\n  const handleAnswer = (option) => {\r\n    setSelected(option)\r\n    setAnswers(prev => [...prev, { ...currentQ, selected: option }])\r\n    if (option === currentQ.answer) {\r\n      setScore(score + 1)\r\n    }\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    if (current + 1 < questions.length) {\r\n      setCurrent(current + 1)\r\n      setSelected(null)\r\n    } else {\r\n      setShowResult(true)\r\n    }\r\n  }\r\n\r\n  const retryQuiz = () => {\r\n    setCurrent(0)\r\n    setSelected(null)\r\n    setScore(0)\r\n    setAnswers([])\r\n    setShowResult(false)\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <h1>📝 Quiz: Chapter 4 – Fundamentals of Neural Networks</h1>\r\n        {!showResult ? (\r\n          <div className=\"question\">\r\n            <p><strong>Q{current + 1}:</strong> {currentQ.question}</p>\r\n            {currentQ.options.map((opt) => (\r\n              <div key={opt}>\r\n                <button\r\n                  onClick={() => handleAnswer(opt)}\r\n                  disabled={selected !== null}\r\n                >\r\n                  {opt}\r\n                </button>\r\n              </div>\r\n            ))}\r\n            {selected && (\r\n              <p className=\"feedback\">\r\n                {selected === currentQ.answer ? \"✅ Correct!\" : `❌ Incorrect. Correct: ${currentQ.answer}`}\r\n              </p>\r\n            )}\r\n            {selected && (\r\n              <button onClick={nextQuestion}>Next</button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>✅ Your Score: {score} / {questions.length}</h2>\r\n            <p>{score >= questions.length * 0.8 ? \"🎉 Awesome job!\" : \"📚 Review and try again!\"}</p>\r\n\r\n            <button onClick={retryQuiz}>🔁 Retry Quiz</button>\r\n            \r\n            <div className=\"review\">\r\n              <h3>📝 Review:</h3>\r\n              {answers.map((item, i) => (\r\n                <div key={i}>\r\n                  <p><strong>Q{i + 1}:</strong> {item.question}</p>\r\n                  <p>\r\n                    Your Answer:{\" \"}\r\n                    <span className={item.selected === item.answer ? \"correct\" : \"wrong\"}>\r\n                      {item.selected}\r\n                    </span>\r\n                  </p>\r\n                  <p>Correct Answer: {item.answer}</p>\r\n                  <p><em>🧠 {item.explanation}</em></p>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"2rem\" }}>\r\n              <Link to=\"/chapter-4\">← Back to Chapter 4</Link> |{\" \"}\r\n              <Link to=\"/\">🏠 Home</Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport { Head }\r\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","Wrapper","styled","div","withConfig","displayName","componentId","allQuestions","question","options","answer","explanation","QuizChapter3","questions","concat","sort","Math","random","current","setCurrent","selected","setSelected","score","setScore","showResult","setShowResult","answers","setAnswers","currentQ","Layout","length","onClick","retryQuiz","className","map","item","i","key","Link","to","opt","handleAnswer","option","prev","_toConsumableArray","disabled","nextQuestion"],"sourceRoot":""}