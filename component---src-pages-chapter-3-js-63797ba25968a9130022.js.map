{"version":3,"file":"component---src-pages-chapter-3-js-63797ba25968a9130022.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashcardsChapter3.js","webpack://gatsby-starter-default/./src/components/NeuralNetworkDemo.js","webpack://gatsby-starter-default/./src/pages/chapter-3.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children, isFullWidth = false }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\r\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        {!isFullWidth && (\r\n          <footer\r\n            style={{\r\n              marginTop: `var(--space-5)`,\r\n              fontSize: `var(--font-sm)`,\r\n              color: \"#888\",\r\n            }}\r\n          >\r\n            © {new Date().getFullYear()} · Built for AWS AI learners\r\n          </footer>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// src/components/seo.js\r\nimport * as React from \"react\"\r\n\r\nexport function Head({ title, description = \"\" }) {\r\n  const siteTitle = \"AWS AI Study Guide\"\r\n  const siteDescription = description || \"Interactive learning for AWS AI\"\r\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\r\n  const author = \"Aneesh Mussim\"\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\r\n      <meta name=\"description\" content={siteDescription} />\r\n      <meta property=\"og:title\" content={title || siteTitle} />\r\n      <meta property=\"og:description\" content={siteDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"twitter:title\" content={title || siteTitle} />\r\n      <meta name=\"twitter:description\" content={siteDescription} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nconst Card = styled.div`\r\n  background: #111;\r\n  border: 1px solid #00ff90;\r\n  border-radius: 10px;\r\n  padding: 2rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  font-family: \"Courier New\", monospace;\r\n  color: #00ff90;\r\n  animation: ${fadeIn} 0.5s ease;\r\n  transition: transform 0.4s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  background: #00ff90;\r\n  color: black;\r\n  border: none;\r\n  padding: 0.6rem 1.2rem;\r\n  margin-top: 1rem;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #00cc70;\r\n  }\r\n`\r\n\r\nfunction shuffleArray(array) {\r\n  return [...array].sort(() => Math.random() - 0.5)\r\n}\r\n\r\nconst flashcards = [\r\n    { question: \"What is deep learning?\", answer: \"A subset of ML that uses multi-layered neural networks to learn from large, complex data.\" },\r\n    { question: \"What is a neural network?\", answer: \"A model made up of layers of interconnected neurons that process data in a hierarchical way.\" },\r\n    { question: \"What is a neuron?\", answer: \"A single unit in a neural network that performs a weighted sum of inputs and applies an activation function.\" },\r\n    { question: \"What does the activation function do?\", answer: \"It introduces non-linearity, allowing the network to learn complex patterns.\" },\r\n    { question: \"Name a common activation function.\", answer: \"ReLU (Rectified Linear Unit) is widely used for hidden layers.\" },\r\n    { question: \"What is an input layer?\", answer: \"The first layer in a neural network that receives the input data.\" },\r\n    { question: \"What is the output layer?\", answer: \"The final layer that produces the model’s prediction.\" },\r\n    { question: \"What are hidden layers?\", answer: \"Layers between input and output that extract features from data.\" },\r\n    { question: \"What is backpropagation?\", answer: \"An algorithm that updates weights by calculating gradients from the output layer back to the input layer.\" },\r\n    { question: \"What is gradient descent?\", answer: \"An optimization algorithm used to minimize the loss function by adjusting weights.\" },\r\n    { question: \"What is a loss function?\", answer: \"A measure of how far the predicted output is from the actual value.\" },\r\n    { question: \"What is a common loss function for classification?\", answer: \"Cross-entropy loss.\" },\r\n    { question: \"What is overfitting in deep learning?\", answer: \"When a model performs well on training data but poorly on unseen data.\" },\r\n    { question: \"What is underfitting?\", answer: \"When a model is too simple to learn meaningful patterns in the data.\" },\r\n    { question: \"What helps reduce overfitting?\", answer: \"Regularization techniques like dropout or L2, and more training data.\" },\r\n    { question: \"What is dropout?\", answer: \"A technique that randomly disables neurons during training to prevent overfitting.\" },\r\n    { question: \"What is an epoch?\", answer: \"One full pass through the training dataset.\" },\r\n    { question: \"What is a batch size?\", answer: \"The number of training samples used in one forward/backward pass.\" },\r\n    { question: \"What does the optimizer do?\", answer: \"It updates model weights to minimize the loss function.\" },\r\n    { question: \"Name a popular optimizer.\", answer: \"Adam is a widely used optimizer in deep learning.\" },\r\n    { question: \"What is a convolutional neural network (CNN)?\", answer: \"A type of network used for image data that extracts spatial features.\" },\r\n    { question: \"What is a recurrent neural network (RNN)?\", answer: \"A network for sequential data like text or time series, where outputs are fed back as inputs.\" },\r\n    { question: \"What are real-world uses of CNNs?\", answer: \"Facial recognition, medical imaging, object detection, etc.\" },\r\n    { question: \"What are real-world uses of RNNs?\", answer: \"Speech recognition, language translation, sentiment analysis.\" },\r\n    { question: \"What is transfer learning?\", answer: \"Using a pre-trained model on a new, related problem to speed up training.\" },\r\n    { question: \"What is model inference?\", answer: \"Using a trained model to make predictions on new data.\" },\r\n    { question: \"What is fine-tuning?\", answer: \"Adjusting a pre-trained model’s weights to adapt to a specific task.\" },\r\n    { question: \"What is the benefit of using GPUs for deep learning?\", answer: \"They accelerate matrix operations and reduce training time.\" },\r\n    { question: \"What is softmax used for?\", answer: \"It converts logits to probabilities in multi-class classification.\" },\r\n    { question: \"What is a deep neural network?\", answer: \"A neural network with two or more hidden layers.\" }\r\n  ]\r\n\r\nexport default function FlashcardsChapter3() {\r\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\r\n  const [index, setIndex] = React.useState(0)\r\n  const [showAnswer, setShowAnswer] = React.useState(false)\r\n\r\n  const nextCard = () => {\r\n    setShowAnswer(false)\r\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\r\n      <p>{shuffledCards[index].question}</p>\r\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\r\n      <div>\r\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\r\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\r\n        </Button>\r\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\n// Fade in + slight upward float\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nconst NetworkWrapper = styled.div`\r\n  margin: 3rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 3rem;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst Layer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n  position: relative;\r\n  animation: ${fadeIn} 0.6s ease-in;\r\n`\r\n\r\nconst Neuron = styled.div`\r\n  background: ${({ active }) => (active ? \"#00ffcc\" : \"#00ff90\")};\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  position: relative;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  border: 2px solid #00ff90;\r\n\r\n  &:hover::after {\r\n    content: attr(data-tooltip);\r\n    position: absolute;\r\n    left: 120%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    background: #111;\r\n    color: #00ff90;\r\n    padding: 0.4rem 0.8rem;\r\n    border-radius: 6px;\r\n    font-size: 0.8rem;\r\n    white-space: nowrap;\r\n    border: 1px solid #00ff90;\r\n  }\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 40px;\r\n  height: 2px;\r\n  width: 40px;\r\n  background: #00ff90;\r\n  transform: rotate(${props => props.rotate || \"0deg\"});\r\n  transform-origin: left center;\r\n\r\n  &::after {\r\n    content: \"▶\";\r\n    position: absolute;\r\n    right: -10px;\r\n    top: -8px;\r\n    font-size: 1rem;\r\n    color: #00ff90;\r\n  }\r\n`\r\n\r\nexport default function NeuralNetworkDemo() {\r\n  const [activeIndex, setActiveIndex] = React.useState(null)\r\n\r\n  return (\r\n    <>\r\n      <h2>🧠 Visual Demo: Neural Network</h2>\r\n      <NetworkWrapper>\r\n        {/* Input Layer */}\r\n        <Layer>\r\n          <Neuron data-tooltip=\"Tenure (months)\" />\r\n          <Neuron data-tooltip=\"Monthly Charges\" />\r\n          <Neuron data-tooltip=\"Support Calls\" />\r\n        </Layer>\r\n\r\n        {/* Hidden Layer */}\r\n        <Layer>\r\n          {[0, 1, 2, 3].map((_, idx) => (\r\n            <Neuron\r\n              key={idx}\r\n              data-tooltip={`Hidden Neuron ${idx + 1}`}\r\n              active={activeIndex === idx}\r\n              onMouseEnter={() => setActiveIndex(idx)}\r\n              onMouseLeave={() => setActiveIndex(null)}\r\n            />\r\n          ))}\r\n        </Layer>\r\n\r\n        {/* Output Layer */}\r\n        <Layer>\r\n          <Neuron data-tooltip=\"Prediction: Will Churn?\" />\r\n        </Layer>\r\n      </NetworkWrapper>\r\n    </>\r\n  )\r\n}\r\n","// src/pages/chapter-3.js\r\nimport * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Head } from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\nimport FlashcardsChapter3 from \"../components/FlashcardsChapter3\"\r\nimport NeuralNetworkDemo from \"../components/NeuralNetworkDemo\"\r\n\r\nconst PageWrapper = styled.div`\r\n\r\n.button-group {\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n\r\n  a {\r\n    background: #00ff90;\r\n    color: black;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    font-family: \"Courier New\", monospace;\r\n    transition: background 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #00cc70;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  background: black;\r\n  color: #00ff90;\r\n  font-family: \"Courier New\", monospace;\r\n  padding: 3rem 2rem;\r\n  min-height: 100vh;\r\n\r\n  h1, h2, h3 {\r\n    color: #00ff90;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  p, li {\r\n    line-height: 1.7;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 1.5rem;\r\n  }\r\n\r\n  strong {\r\n    color: #00ffcc;\r\n  }\r\n\r\n  code {\r\n    background: #111;\r\n    padding: 0.2rem 0.4rem;\r\n    border-radius: 4px;\r\n    color: #00ffcc;\r\n  }\r\n`\r\n\r\nconst DiagramWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n  margin: 2rem 0;\r\n`\r\n\r\nconst DiagramBox = styled.div`\r\n  background: #111;\r\n  border: 2px solid #00ff90;\r\n  border-radius: 10px;\r\n  padding: 1.5rem;\r\n  width: 280px;\r\n  transition: transform 0.3s ease;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  h3 {\r\n    color: #00ffcc;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n\r\n  p {\r\n    margin: 0.4rem 0;\r\n  }\r\n`\r\n\r\nconst CodeDemo = styled.pre`\r\n  background: #111;\r\n  color: #00ffcc;\r\n  padding: 1.5rem;\r\n  border-radius: 10px;\r\n  font-family: \"Courier New\", monospace;\r\n  white-space: pre-wrap;\r\n  margin-top: 2rem;\r\n  border: 1px solid #00ff90;\r\n`\r\n\r\nconst NNWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-start;\r\n  margin: 3rem 0;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n`\r\n\r\nconst Layer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  h3 {\r\n    color: #00ffcc;\r\n    margin-bottom: 1rem;\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst Neuron = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #00ff90;\r\n  border-radius: 50%;\r\n  margin: 0.4rem;\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.3);\r\n    background-color: #00cc70;\r\n  }\r\n`\r\n\r\n\r\nexport default function Chapter3Page() {\r\n  return (\r\n    <Layout>\r\n      <PageWrapper>\r\n        <h1>🤖 Chapter 3: Introduction to Deep Learning</h1>\r\n        <p>\r\n          Deep learning is a specialized branch of machine learning inspired by how the human brain processes information. It uses <strong>neural networks</strong> to learn from data, especially when the data is large and complex.\r\n        </p>\r\n\r\n        <h2>🧠 Why Deep Learning?</h2>\r\n        <ul>\r\n          <li>Excels at tasks like image recognition, speech-to-text, and language translation</li>\r\n          <li>Reduces need for manual feature engineering</li>\r\n          <li>Can learn complex representations from raw data</li>\r\n        </ul>\r\n\r\n        <h2>📚 How It's Different from Traditional ML</h2>\r\n        <ul>\r\n          <li><strong>Traditional ML:</strong> Often needs manual feature selection</li>\r\n          <li><strong>Deep Learning:</strong> Learns features automatically using layers</li>\r\n          <li><strong>ML:</strong> Works well with structured/tabular data</li>\r\n          <li><strong>DL:</strong> Shines with images, audio, and natural language</li>\r\n        </ul>\r\n\r\n        <h2>🧱 Building Blocks of Neural Networks</h2>\r\n        <DiagramWrapper>\r\n          <DiagramBox>\r\n            <h3>Neuron</h3>\r\n            <p>Basic unit that takes input → applies weight → passes through an activation</p>\r\n          </DiagramBox>\r\n          <DiagramBox>\r\n            <h3>Layer</h3>\r\n            <p>Collection of neurons. Multiple layers make a deep network.</p>\r\n          </DiagramBox>\r\n          <DiagramBox>\r\n            <h3>Activation</h3>\r\n            <p>Function like ReLU or Sigmoid adds non-linearity to learning</p>\r\n          </DiagramBox>\r\n        </DiagramWrapper>\r\n\r\n        <h2>🧪 Simple Deep Learning Pseudo-code</h2>\r\n\r\n        <h2>🧠 Visual: Neural Network Architecture</h2>\r\n<NNWrapper>\r\n  <Layer>\r\n    <h3>Input Layer</h3>\r\n    <Neuron />\r\n    <Neuron />\r\n    <Neuron />\r\n  </Layer>\r\n  <Layer>\r\n    <h3>Hidden Layer 1</h3>\r\n    <Neuron />\r\n    <Neuron />\r\n    <Neuron />\r\n    <Neuron />\r\n  </Layer>\r\n  <Layer>\r\n    <h3>Hidden Layer 2</h3>\r\n    <Neuron />\r\n    <Neuron />\r\n  </Layer>\r\n  <Layer>\r\n    <h3>Output Layer</h3>\r\n    <Neuron />\r\n  </Layer>\r\n</NNWrapper>\r\n\r\n<NeuralNetworkDemo />\r\n\r\n\r\n        <CodeDemo>{`\r\n# Pseudo-code for image classification\r\n\r\n# Load dataset\r\nimages, labels = load_image_data()\r\n\r\n# Build model\r\nmodel = Sequential()\r\nmodel.add(Dense(128, activation='relu'))\r\nmodel.add(Dense(64, activation='relu'))\r\nmodel.add(Dense(10, activation='softmax'))\r\n\r\n# Train\r\nmodel.compile(optimizer='adam', loss='categorical_crossentropy')\r\nmodel.fit(images, labels, epochs=10)\r\n\r\n# Predict\r\nresult = model.predict(new_image)\r\n        `}</CodeDemo>\r\n\r\n        <h2>🌍 Real-World Examples</h2>\r\n        <ul>\r\n          <li><strong>Healthcare:</strong> Cancer detection from medical scans</li>\r\n          <li><strong>Finance:</strong> Fraud detection using transaction patterns</li>\r\n          <li><strong>Retail:</strong> Personalized product recommendations</li>\r\n          <li><strong>Speech:</strong> Voice assistants like Alexa, Siri</li>\r\n        </ul>\r\n\r\n        <h2>🧠 Key Takeaways</h2>\r\n        <ul>\r\n          <li>Deep learning uses multi-layered neural networks</li>\r\n          <li>Best for large, complex, unstructured data</li>\r\n          <li>Enables cutting-edge AI like computer vision and NLP</li>\r\n          <li>Needs significant data and compute power (GPU/TPU)</li>\r\n        </ul>\r\n        <FlashcardsChapter3 />\r\n        <div className=\"button-group\">\r\n          <Link to=\"/quiz-chapter-3\">📝 Quiz</Link>{\" \"}\r\n          <Link to=\"/\">🏠 Home</Link>\r\n        </div>\r\n      </PageWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport { Head }\r\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashcardsChapter3","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","NetworkWrapper","Layer","Neuron","active","props","rotate","NeuralNetworkDemo","activeIndex","setActiveIndex","map","_","idx","key","onMouseEnter","onMouseLeave","PageWrapper","DiagramWrapper","DiagramBox","CodeDemo","pre","NNWrapper","Chapter3Page","Layout","className","Link","to"],"sourceRoot":""}