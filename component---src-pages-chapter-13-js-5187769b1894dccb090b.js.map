{"version":3,"file":"component---src-pages-chapter-13-js-5187769b1894dccb090b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashcardsChapter13.js","webpack://gatsby-starter-default/./src/pages/chapter-13.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children, isFullWidth = false }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\r\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        {!isFullWidth && (\r\n          <footer\r\n            style={{\r\n              marginTop: `var(--space-5)`,\r\n              fontSize: `var(--font-sm)`,\r\n              color: \"#888\",\r\n            }}\r\n          >\r\n            © {new Date().getFullYear()} · Built for AWS AI learners\r\n          </footer>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// src/components/seo.js\r\nimport * as React from \"react\"\r\n\r\nexport function Head({ title, description = \"\" }) {\r\n  const siteTitle = \"AWS AI Study Guide\"\r\n  const siteDescription = description || \"Interactive learning for AWS AI\"\r\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\r\n  const author = \"Aneesh Mussim\"\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\r\n      <meta name=\"description\" content={siteDescription} />\r\n      <meta property=\"og:title\" content={title || siteTitle} />\r\n      <meta property=\"og:description\" content={siteDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"twitter:title\" content={title || siteTitle} />\r\n      <meta name=\"twitter:description\" content={siteDescription} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nconst Card = styled.div`\r\n  background: #111;\r\n  border: 1px solid #00ff90;\r\n  border-radius: 10px;\r\n  padding: 2rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  font-family: \"Courier New\", monospace;\r\n  color: #00ff90;\r\n  animation: ${fadeIn} 0.5s ease;\r\n  transition: transform 0.4s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  background: #00ff90;\r\n  color: black;\r\n  border: none;\r\n  padding: 0.6rem 1.2rem;\r\n  margin-top: 1rem;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #00cc70;\r\n  }\r\n`\r\n\r\nfunction shuffleArray(array) {\r\n  return [...array].sort(() => Math.random() - 0.5)\r\n}\r\n\r\nconst flashcards = [\r\n    { question: \"What is a neural network?\", answer: \"A machine learning model inspired by the human brain that learns from data using layers of interconnected neurons.\" },\r\n    { question: \"What are the three main types of layers in a neural network?\", answer: \"Input layer, hidden layers, and output layer.\" },\r\n    { question: \"What is the function of the input layer?\", answer: \"It receives raw features or data to feed into the network.\" },\r\n    { question: \"What happens in hidden layers?\", answer: \"They perform intermediate computations and transformations using weighted inputs and activation functions.\" },\r\n    { question: \"What is the output layer responsible for?\", answer: \"Producing the final predictions or scores.\" },\r\n    { question: \"What is a neuron (or node) in a neural network?\", answer: \"A computational unit that performs a weighted sum of inputs and applies an activation function.\" },\r\n    { question: \"What is an activation function?\", answer: \"A function that introduces non-linearity into the network, enabling it to learn complex patterns.\" },\r\n    { question: \"Name three common activation functions.\", answer: \"ReLU, Sigmoid, and Softmax.\" },\r\n    { question: \"What does ReLU stand for?\", answer: \"Rectified Linear Unit – outputs max(0, x).\" },\r\n    { question: \"When is Softmax typically used?\", answer: \"In the output layer of classification tasks to convert logits to probabilities.\" },\r\n    { question: \"What is the purpose of backpropagation?\", answer: \"To adjust weights in the network based on the error using gradients.\" },\r\n    { question: \"What algorithm is used to optimize weights during training?\", answer: \"Gradient Descent (and its variants like Adam).\" },\r\n    { question: \"What is a loss function?\", answer: \"A function that measures the difference between the predicted output and the actual target.\" },\r\n    { question: \"What does Binary Cross-Entropy measure?\", answer: \"Error for binary classification problems.\" },\r\n    { question: \"What is the purpose of Mean Squared Error (MSE)?\", answer: \"It's used in regression to penalize larger errors more.\" },\r\n    { question: \"What is forward propagation?\", answer: \"The process of passing inputs through the network to generate predictions.\" },\r\n    { question: \"What is the vanishing gradient problem?\", answer: \"When gradients become too small, preventing proper weight updates – often in deep networks using Sigmoid or Tanh.\" },\r\n    { question: \"How does ReLU help avoid vanishing gradients?\", answer: \"It allows gradients to pass through for positive values, improving training stability.\" },\r\n    { question: \"What is dropout in neural networks?\", answer: \"A regularization technique that randomly disables neurons during training to prevent overfitting.\" },\r\n    { question: \"What is overfitting in neural networks?\", answer: \"When the model learns noise from the training data and performs poorly on unseen data.\" },\r\n    { question: \"What is a fully connected (dense) layer?\", answer: \"A layer where each neuron is connected to all outputs from the previous layer.\" },\r\n    { question: \"How does batch normalization help?\", answer: \"It stabilizes learning by normalizing layer inputs during training.\" },\r\n    { question: \"What is an epoch?\", answer: \"One full pass through the entire training dataset.\" },\r\n    { question: \"What does the learning rate control?\", answer: \"How much weights are updated during training.\" },\r\n    { question: \"What is a convolutional neural network (CNN)?\", answer: \"A specialized NN for processing image data using filters and pooling.\" },\r\n    { question: \"What kind of problems are CNNs best suited for?\", answer: \"Image classification, object detection, facial recognition.\" },\r\n    { question: \"What is a real-world application of neural networks?\", answer: \"Self-driving cars use neural networks to interpret visual input and make decisions.\" },\r\n    { question: \"What is a deep neural network?\", answer: \"A network with many hidden layers capable of learning highly abstract representations.\" },\r\n    { question: \"Why are activation functions crucial?\", answer: \"Without them, the network could only learn linear functions regardless of layers.\" },\r\n    { question: \"What does 'training' mean in the context of neural networks?\", answer: \"Optimizing weights to minimize the loss between predicted and actual outputs.\" }\r\n  ]\r\n\r\nexport default function FlashcardsChapter13() {\r\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\r\n  const [index, setIndex] = React.useState(0)\r\n  const [showAnswer, setShowAnswer] = React.useState(false)\r\n\r\n  const nextCard = () => {\r\n    setShowAnswer(false)\r\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\r\n      <p>{shuffledCards[index].question}</p>\r\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\r\n      <div>\r\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\r\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\r\n        </Button>\r\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","// src/pages/chapter-13.js\r\n\r\nimport * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Head } from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport FlashcardsChapter13 from \"../components/FlashcardsChapter13\"\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n\r\n  a {\r\n    background: #00ff90;\r\n    color: black;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    transition: background 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #00cc70;\r\n    }\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  color: #00ff90;\r\n  font-family: \"Courier New\", monospace;\r\n  padding: 3rem 2rem;\r\n  min-height: 100vh;\r\n\r\n  h1, h2, h3 {\r\n    color: #00ff90;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  p, li {\r\n    line-height: 1.7;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 1.5rem;\r\n  }\r\n\r\n  code, pre {\r\n    background: #111;\r\n    color: #00ffcc;\r\n    padding: 0.4rem;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  .highlight {\r\n    color: #00ffcc;\r\n  }\r\n\r\n  .box {\r\n    margin-top: 2rem;\r\n    background: #111;\r\n    border: 2px solid #00ff90;\r\n    padding: 1.5rem;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .button-group {\r\n    margin-top: 3rem;\r\n    display: flex;\r\n    gap: 1rem;\r\n    flex-wrap: wrap;\r\n\r\n    a {\r\n      background: #00ff90;\r\n      color: black;\r\n      padding: 0.75rem 1.5rem;\r\n      border-radius: 8px;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      transition: background 0.3s ease;\r\n\r\n      &:hover {\r\n        background: #00cc70;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Chapter13Page() {\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <h1>🧪 Chapter 13: Exam Tips & Review Strategy</h1>\r\n        <p>\r\n          You're nearing the finish line! This chapter offers tips, exam strategies, and how to review efficiently so you walk into the AWS Certified Machine Learning – Specialty exam feeling confident.\r\n        </p>\r\n\r\n        <h2>✅ Before the Exam: What to Master</h2>\r\n        <ul>\r\n          <li>✅ AWS ML services: <strong>SageMaker, Comprehend, Rekognition, Personalize, Forecast, Lex, Polly, Textract</strong></li>\r\n          <li>✅ End-to-end ML lifecycle (data prep → deployment & monitoring)</li>\r\n          <li>✅ Model tuning and evaluation techniques</li>\r\n          <li>✅ Security best practices (IAM, encryption, endpoints)</li>\r\n          <li>✅ When to use specific ML tools or AWS services</li>\r\n          <li>✅ Understanding business use cases and real-world deployment issues</li>\r\n        </ul>\r\n\r\n        <h2>🧠 Study & Review Tips</h2>\r\n        <div className=\"box\">\r\n          <ul>\r\n            <li><strong>Review key flashcards:</strong> Focus on terminology and definitions</li>\r\n            <li><strong>Skim chapter summaries:</strong> Especially diagrams and sample code</li>\r\n            <li><strong>Take practice quizzes:</strong> Identify weak areas quickly</li>\r\n            <li><strong>Explain aloud:</strong> Try teaching a topic to yourself or others</li>\r\n            <li><strong>Don’t memorize — understand:</strong> Know why a service is used, not just what it does</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <h2>🎯 Exam Strategy</h2>\r\n        <ul>\r\n          <li>⏱️ <strong>Time management:</strong> You’ll have ~3 minutes per question. Don’t dwell too long.</li>\r\n          <li>🟡 <strong>Flag and return:</strong> Mark unsure questions and revisit later with fresh eyes.</li>\r\n          <li>❓ <strong>Eliminate wrong choices:</strong> Use process of elimination to improve odds.</li>\r\n          <li>🔍 <strong>Look for hints:</strong> Words like “real-time,” “low latency,” “offline batch” point to different AWS services.</li>\r\n        </ul>\r\n\r\n        <h2>📌 Common Exam Question Themes</h2>\r\n        <ul>\r\n          <li>Scenario-based ML project decisions</li>\r\n          <li>Selecting the right AWS service</li>\r\n          <li>Data preprocessing + transformation</li>\r\n          <li>Monitoring model performance over time</li>\r\n          <li>Security and compliance in ML solutions</li>\r\n        </ul>\r\n\r\n        <h2>🎓 Final Advice</h2>\r\n        <div className=\"box\">\r\n          <p><strong>🌟 Confidence beats cramming.</strong></p>\r\n          <p>Use what you’ve built in this guide — flashcards, chapter reviews, real-world practice questions — to reinforce what you know.</p>\r\n          <p>Sleep well before the test, stay calm, and trust your preparation.</p>\r\n        </div>\r\n\r\n        <FlashcardsChapter13 />\r\n                <ButtonGroup>\r\n                         <Link to=\"/quiz-chapter-13\">📝 Quiz</Link>\r\n                         <Link to=\"/\">🏠 Back to Home</Link>\r\n                       </ButtonGroup>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport { Head }\r\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashcardsChapter13","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","ButtonGroup","Wrapper","Chapter13Page","Layout","className","Link","to"],"sourceRoot":""}