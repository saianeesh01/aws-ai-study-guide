{"version":3,"file":"component---src-pages-quiz-chapter-1-js-209bfda81f5ac1cca05a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/quiz-chapter-1.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, isFullWidth = false }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\n        }}\n      >\n        <main>{children}</main>\n        {!isFullWidth && (\n          <footer\n            style={{\n              marginTop: `var(--space-5)`,\n              fontSize: `var(--font-sm)`,\n              color: \"#888\",\n            }}\n          >\n            © {new Date().getFullYear()} · Built for AWS AI learners\n          </footer>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/seo.js\nimport * as React from \"react\"\n\nexport function Head({ title, description = \"\" }) {\n  const siteTitle = \"AWS AI Study Guide\"\n  const siteDescription = description || \"Interactive learning for AWS AI\"\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\n  const author = \"Aneesh Mussim\"\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      <meta name=\"description\" content={siteDescription} />\n      <meta property=\"og:title\" content={title || siteTitle} />\n      <meta property=\"og:description\" content={siteDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={title || siteTitle} />\n      <meta name=\"twitter:description\" content={siteDescription} />\n    </>\n  )\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Head } from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nfunction shuffleArray(array) {\n    return [...array].sort(() => Math.random() - 0.5)\n  }\nconst Wrapper = styled.div`\n  background: black;\n  color: #00ff90;\n  font-family: \"Courier New\", monospace;\n  padding: 3rem 2rem;\n  min-height: 100vh;\n\n  h1 {\n    color: #00ff90;\n    margin-bottom: 2rem;\n  }\n\n  .question {\n    margin-bottom: 2rem;\n  }\n\n  button {\n    background: #00ff90;\n    color: black;\n    border: none;\n    padding: 0.5rem 1rem;\n    margin-top: 1rem;\n    margin-right: 1rem;\n    border-radius: 6px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #00cc70;\n    }\n  }\n\n  .feedback {\n    margin-top: 1rem;\n    font-weight: bold;\n  }\n\n  .review {\n    margin-top: 2rem;\n    padding: 1rem;\n    background: #111;\n    border: 1px solid #00ff90;\n    border-radius: 10px;\n\n    p {\n      margin: 0.3rem 0;\n    }\n\n    .wrong {\n      color: red;\n    }\n\n    .correct {\n      color: #00ff90;\n    }\n  }\n`\n\nconst allQuestions = [\n    {\n      question: \"Which of the following is NOT a type of ML?\",\n      options: [\"Supervised Learning\", \"Unsupervised Learning\", \"Reinforcement Learning\", \"Structured Learning\"],\n      answer: \"Structured Learning\",\n      explanation: \"Structured Learning is not a standard ML paradigm. The three main types are supervised, unsupervised, and reinforcement learning.\"\n    },\n    {\n      question: \"What is the purpose of inference in ML?\",\n      options: [\n        \"Collect data\",\n        \"Make predictions using a trained model\",\n        \"Improve training speed\",\n        \"Reduce overfitting\"\n      ],\n      answer: \"Make predictions using a trained model\",\n      explanation: \"Inference means applying a trained model to new data to generate predictions.\"\n    },\n    {\n      question: \"Overfitting occurs when...\",\n      options: [\n        \"The model performs well on new data\",\n        \"The model memorizes training data\",\n        \"The model misses patterns\",\n        \"The data is clean\"\n      ],\n      answer: \"The model memorizes training data\",\n      explanation: \"Overfitting happens when a model learns the training data too well and fails to generalize to new data.\"\n    },\n    {\n      question: \"What is labeled data?\",\n      options: [\"Data with missing values\", \"Data containing both input and output\", \"Unsorted data\", \"Data from sensors\"],\n      answer: \"Data containing both input and output\",\n      explanation: \"Labeled data includes inputs paired with correct outputs — it's used in supervised learning.\"\n    },\n    {\n      question: \"Which ML type finds hidden patterns in data?\",\n      options: [\"Supervised Learning\", \"Unsupervised Learning\", \"Reinforcement Learning\", \"Deep Learning\"],\n      answer: \"Unsupervised Learning\",\n      explanation: \"Unsupervised learning analyzes unlabeled data to discover structure or groupings.\"\n    },\n    {\n      question: \"Which ML type is most used in classification tasks?\",\n      options: [\"Supervised Learning\", \"Unsupervised Learning\", \"Reinforcement Learning\", \"Semi-supervised Learning\"],\n      answer: \"Supervised Learning\",\n      explanation: \"Supervised learning uses labeled data, ideal for classification and regression tasks.\"\n    },\n    {\n      question: \"What does 'training a model' mean?\",\n      options: [\"Optimizing hardware\", \"Testing predictions\", \"Feeding data into a model to adjust weights\", \"Setting up AWS infrastructure\"],\n      answer: \"Feeding data into a model to adjust weights\",\n      explanation: \"Training means adjusting model parameters based on data to minimize error.\"\n    },\n    {\n      question: \"Which is an example of reinforcement learning?\",\n      options: [\"Spam filtering\", \"Movie recommendations\", \"Game-playing AI\", \"Speech recognition\"],\n      answer: \"Game-playing AI\",\n      explanation: \"Reinforcement learning is used in dynamic environments where agents learn through feedback, like games.\"\n    },\n    {\n      question: \"What is underfitting?\",\n      options: [\n        \"Model is too simple to learn from data\",\n        \"Model performs well on validation data\",\n        \"Model overlearns patterns\",\n        \"Model is slow\"\n      ],\n      answer: \"Model is too simple to learn from data\",\n      explanation: \"Underfitting occurs when a model fails to capture the underlying patterns of the data.\"\n    },\n    {\n      question: \"What is the role of features in ML?\",\n      options: [\"Store results\", \"Train algorithms\", \"Represent inputs to the model\", \"Evaluate performance\"],\n      answer: \"Represent inputs to the model\",\n      explanation: \"Features are the measurable properties or inputs used to train a model.\"\n    },\n    {\n      question: \"Which data is used to evaluate the model's performance?\",\n      options: [\"Training Data\", \"Validation Data\", \"Noise Data\", \"Input Data\"],\n      answer: \"Validation Data\",\n      explanation: \"Validation data is used to fine-tune and evaluate the model's performance before final testing.\"\n    },\n    {\n      question: \"What is a predictive model?\",\n      options: [\"Model that can classify only\", \"Model built without data\", \"Model that makes future predictions\", \"Template for input\"],\n      answer: \"Model that makes future predictions\",\n      explanation: \"Predictive models are trained to forecast outcomes based on past patterns.\"\n    },\n    {\n      question: \"What is data quality important for in ML?\",\n      options: [\"Hardware speed\", \"Model complexity\", \"Accurate predictions\", \"Reducing features\"],\n      answer: \"Accurate predictions\",\n      explanation: \"Poor quality data results in unreliable predictions and poor generalization.\"\n    },\n    {\n      question: \"Which of the following is an example of supervised learning?\",\n      options: [\"K-means clustering\", \"Spam detection\", \"Principal component analysis\", \"Anomaly detection\"],\n      answer: \"Spam detection\",\n      explanation: \"Spam detection uses labeled data (spam vs not spam), making it a supervised learning task.\"\n    },\n    {\n      question: \"Which algorithm is commonly used for clustering?\",\n      options: [\"Linear Regression\", \"K-Means\", \"Decision Trees\", \"Naive Bayes\"],\n      answer: \"K-Means\",\n      explanation: \"K-Means is a popular unsupervised algorithm for grouping data points into clusters.\"\n    },\n    {\n      question: \"Which ML task requires a reward system to learn?\",\n      options: [\"Clustering\", \"Classification\", \"Regression\", \"Reinforcement Learning\"],\n      answer: \"Reinforcement Learning\",\n      explanation: \"Reinforcement learning uses a feedback loop of rewards and penalties to train agents.\"\n    },\n    {\n      question: \"In supervised learning, the target variable is...\",\n      options: [\"The feature\", \"The predicted output\", \"The clustering label\", \"The training set\"],\n      answer: \"The predicted output\",\n      explanation: \"In supervised learning, models are trained to predict a target/output variable.\"\n    },\n    {\n      question: \"What does a confusion matrix show?\",\n      options: [\n        \"How confused the model is\",\n        \"Training data structure\",\n        \"True vs predicted values\",\n        \"Feature importance\"\n      ],\n      answer: \"True vs predicted values\",\n      explanation: \"Confusion matrices show actual vs predicted labels in classification problems.\"\n    },\n    {\n      question: \"Which of the following is a regression task?\",\n      options: [\n        \"Spam detection\",\n        \"Image classification\",\n        \"Stock price prediction\",\n        \"Customer segmentation\"\n      ],\n      answer: \"Stock price prediction\",\n      explanation: \"Regression predicts continuous values like stock prices or temperatures.\"\n    },\n    {\n      question: \"Which concept helps avoid overfitting?\",\n      options: [\n        \"High learning rate\",\n        \"Early stopping\",\n        \"Underfitting\",\n        \"Poor features\"\n      ],\n      answer: \"Early stopping\",\n      explanation: \"Early stopping halts training when performance stops improving on validation data, reducing overfitting.\"\n    },\n    {\n        question: \"You're building a spam detection system. Which ML type should you use?\",\n        options: [\"Unsupervised Learning\", \"Supervised Learning\", \"Reinforcement Learning\", \"Deep Learning\"],\n        answer: \"Supervised Learning\",\n        explanation: \"Spam detection requires labeled data (spam vs. not spam), which fits supervised learning.\"\n      },\n      {\n        question: \"A retailer wants to group customers by buying habits without labels. Which approach fits?\",\n        options: [\"Classification\", \"Supervised Learning\", \"Unsupervised Learning\", \"Reinforcement Learning\"],\n        answer: \"Unsupervised Learning\",\n        explanation: \"No labels = unsupervised learning. It's great for customer segmentation.\"\n      },\n      {\n        question: \"A self-driving car learns by trial and error. What ML type is this?\",\n        options: [\"Supervised Learning\", \"Reinforcement Learning\", \"Unsupervised Learning\", \"Regression\"],\n        answer: \"Reinforcement Learning\",\n        explanation: \"Trial and error with rewards = classic reinforcement learning.\"\n      },\n      {\n        question: \"You're training a model on 100,000 samples, but it performs poorly on new data. Likely cause?\",\n        options: [\"Underfitting\", \"Overfitting\", \"Balanced data\", \"Perfect model\"],\n        answer: \"Overfitting\",\n        explanation: \"High accuracy on training but poor generalization = overfitting.\"\n      },\n      {\n        question: \"What should you do if your model is underfitting?\",\n        options: [\"Simplify the model\", \"Reduce features\", \"Use more complex model\", \"Decrease training time\"],\n        answer: \"Use more complex model\",\n        explanation: \"Underfitting means the model is too simple — use a more complex one or improve features.\"\n      },\n      {\n        question: \"What is 'inference' in ML?\",\n        options: [\"Labeling data\", \"Training the model\", \"Predicting with a trained model\", \"Hyperparameter tuning\"],\n        answer: \"Predicting with a trained model\",\n        explanation: \"Inference is the process of making predictions after the model is trained.\"\n      },\n      {\n        question: \"You want to identify anomalies in server logs. What's the best ML approach?\",\n        options: [\"Reinforcement Learning\", \"Supervised Learning\", \"Unsupervised Learning\", \"Data labeling\"],\n        answer: \"Unsupervised Learning\",\n        explanation: \"Anomaly detection often works without labels — unsupervised is ideal.\"\n      },\n      {\n        question: \"A company wants to recommend products based on user history. What powers this?\",\n        options: [\"Data labeling\", \"Feature engineering\", \"Recommendation engines using ML\", \"Overfitting\"],\n        answer: \"Recommendation engines using ML\",\n        explanation: \"Recommendation systems rely on ML models using historical data.\"\n      },\n      {\n        question: \"Which technique is useful for reducing overfitting?\",\n        options: [\"Adding more features\", \"Using complex models\", \"Regularization\", \"Decreasing data\"],\n        answer: \"Regularization\",\n        explanation: \"Regularization penalizes overly complex models to help generalize better.\"\n      },\n      {\n        question: \"Why is data quality important in machine learning?\",\n        options: [\"Better UI design\", \"Increases inference speed\", \"Leads to more accurate models\", \"Reduces compute cost\"],\n        answer: \"Leads to more accurate models\",\n        explanation: \"The model is only as good as the data it learns from — garbage in, garbage out.\"\n      }\n    ]\n  \n  export default function QuizChapter1() {\n    const [current, setCurrent] = React.useState(0)\n    const [selected, setSelected] = React.useState(null)\n    const [score, setScore] = React.useState(0)\n    const [showResult, setShowResult] = React.useState(false)\n    const [answers, setAnswers] = React.useState([])\n  \n \n    const [questions] = React.useState(() => shuffleArray(allQuestions))\n    const currentQ = questions[current]\n    const handleAnswer = (option) => {\n      setSelected(option)\n      setAnswers(prev => [...prev, { question: currentQ.question, selected: option, answer: currentQ.answer, explanation: currentQ.explanation }])\n      if (option === currentQ.answer) {\n        setScore(score + 1)\n      }\n    }\n  \n    const nextQuestion = () => {\n      if (current + 1 < questions.length) {\n        setCurrent(current + 1)\n        setSelected(null)\n      } else {\n        setShowResult(true)\n      }\n    }\n  \n    const retryQuiz = () => {\n      setCurrent(0)\n      setSelected(null)\n      setScore(0)\n      setAnswers([])\n      setShowResult(false)\n    }\n  \n    return (\n      <Layout>\n        <Wrapper>\n          <h1>📝 Quiz: Chapter 1 – Introduction to Machine Learning</h1>\n          {!showResult ? (\n            <div className=\"question\">\n              <p><strong>Q{current + 1}:</strong> {currentQ.question}</p>\n              {currentQ.options.map((opt) => (\n                <div key={opt}>\n                  <button\n                    onClick={() => handleAnswer(opt)}\n                    disabled={selected !== null}\n                  >\n                    {opt}\n                  </button>\n                </div>\n              ))}\n              {selected && (\n                <p className=\"feedback\">\n                  {selected === currentQ.answer ? \"✅ Correct!\" : `❌ Incorrect. Correct answer: ${currentQ.answer}`}\n                </p>\n              )}\n              {selected && (\n                <button onClick={nextQuestion}>Next</button>\n              )}\n            </div>\n          ) : (\n            <div>\n              <h2>Your Score: {score} / {questions.length}</h2>\n              <p>{score >= questions.length * 0.8 ? \"🎉 Great job!\" : \"🧠 Keep practicing!\"}</p>\n  \n              <button onClick={retryQuiz}>🔁 Retry Quiz</button>\n  \n              <div className=\"review\">\n                <h3>📝 Review</h3>\n                {answers.map((item, idx) => (\n                  <div key={idx}>\n                    <p><strong>Q{idx + 1}:</strong> {item.question}</p>\n                    <p>\n                      Your Answer:{\" \"}\n                      <span className={item.selected === item.answer ? \"correct\" : \"wrong\"}>\n                        {item.selected}\n                      </span>\n                    </p>\n                    <p>✅ Correct: {item.answer}</p>\n                    <p>🧠 {item.explanation}</p>\n                    <hr />\n                  </div>\n                ))}\n              </div>\n  \n              <div style={{ marginTop: \"2rem\" }}>\n                <Link to=\"/chapter-1\">← Back to Chapter 1</Link> |{\" \"}\n                <Link to=\"/\">🏠 Home</Link>\n              </div>\n            </div>\n          )}\n        </Wrapper>\n      </Layout>\n    )\n  }\n  \n  export { Head }\n\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","Wrapper","styled","div","withConfig","displayName","componentId","allQuestions","question","options","answer","explanation","QuizChapter1","current","setCurrent","selected","setSelected","score","setScore","showResult","setShowResult","answers","setAnswers","questions","shuffleArray","array","_toConsumableArray","sort","Math","random","currentQ","Layout","length","onClick","retryQuiz","className","map","item","idx","key","Link","to","opt","handleAnswer","option","prev","concat","disabled","nextQuestion"],"sourceRoot":""}