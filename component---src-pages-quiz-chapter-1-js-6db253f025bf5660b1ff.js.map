{"version":3,"file":"component---src-pages-quiz-chapter-1-js-6db253f025bf5660b1ff.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/quiz-chapter-1.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children, isFullWidth = false }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\r\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        {!isFullWidth && (\r\n          <footer\r\n            style={{\r\n              marginTop: `var(--space-5)`,\r\n              fontSize: `var(--font-sm)`,\r\n              color: \"#888\",\r\n            }}\r\n          >\r\n            ¬© {new Date().getFullYear()} ¬∑ Built for AWS AI learners\r\n          </footer>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// src/components/seo.js\r\nimport * as React from \"react\"\r\n\r\nexport function Head({ title, description = \"\" }) {\r\n  const siteTitle = \"AWS AI Study Guide\"\r\n  const siteDescription = description || \"Interactive learning for AWS AI\"\r\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\r\n  const author = \"Aneesh Mussim\"\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\r\n      <meta name=\"description\" content={siteDescription} />\r\n      <meta property=\"og:title\" content={title || siteTitle} />\r\n      <meta property=\"og:description\" content={siteDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"twitter:title\" content={title || siteTitle} />\r\n      <meta name=\"twitter:description\" content={siteDescription} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { Head } from \"../components/seo\"\r\nimport styled from \"styled-components\"\r\n\r\nconst QuizWrapper = styled.div`\r\n  background: black;\r\n  color: #00ff90;\r\n  font-family: \"Courier New\", monospace;\r\n  padding: 3rem 2rem;\r\n`\r\n\r\nconst QuestionCard = styled.div`\r\n  margin-bottom: 2rem;\r\n`\r\n\r\nconst Button = styled.button`\r\n  margin-top: 1rem;\r\n  background: #00ff90;\r\n  color: black;\r\n  border: none;\r\n  padding: 0.6rem 1.2rem;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #00cc70;\r\n  }\r\n`\r\n\r\nconst quizData = [\r\n  {\r\n    question: \"Which of the following is NOT a type of ML?\",\r\n    options: [\"Supervised Learning\", \"Unsupervised Learning\", \"Reinforcement Learning\", \"Structured Learning\"],\r\n    answer: \"Structured Learning\"\r\n  },\r\n  {\r\n    question: \"What is the purpose of inference in ML?\",\r\n    options: [\r\n      \"Collect data\",\r\n      \"Make predictions using a trained model\",\r\n      \"Improve training speed\",\r\n      \"Reduce overfitting\"\r\n    ],\r\n    answer: \"Make predictions using a trained model\"\r\n  },\r\n  {\r\n    question: \"Overfitting occurs when...\",\r\n    options: [\r\n      \"The model performs well on new data\",\r\n      \"The model memorizes training data\",\r\n      \"The model misses patterns\",\r\n      \"The data is clean\"\r\n    ],\r\n    answer: \"The model memorizes training data\"\r\n  }\r\n]\r\n\r\nexport default function QuizChapter1() {\r\n  const [score, setScore] = React.useState(0)\r\n  const [step, setStep] = React.useState(0)\r\n  const [selected, setSelected] = React.useState(\"\")\r\n  const [finished, setFinished] = React.useState(false)\r\n\r\n  const current = quizData[step]\r\n\r\n  const handleSubmit = () => {\r\n    if (selected === current.answer) {\r\n      setScore((s) => s + 1)\r\n    }\r\n    if (step + 1 === quizData.length) {\r\n      setFinished(true)\r\n    } else {\r\n      setStep((s) => s + 1)\r\n      setSelected(\"\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <QuizWrapper>\r\n        <h1>üìù Chapter 1 Quiz</h1>\r\n        {!finished ? (\r\n          <QuestionCard>\r\n            <h2>{current.question}</h2>\r\n            {current.options.map((option) => (\r\n              <div key={option}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"option\"\r\n                    value={option}\r\n                    checked={selected === option}\r\n                    onChange={() => setSelected(option)}\r\n                  />\r\n                  {\" \"}{option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n            <Button onClick={handleSubmit} disabled={!selected}>\r\n              {step + 1 === quizData.length ? \"Finish\" : \"Next\"}\r\n            </Button>\r\n          </QuestionCard>\r\n        ) : (\r\n          <h2>üéâ You scored {score} out of {quizData.length}</h2>\r\n        )}\r\n      </QuizWrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport { Head }\r\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","QuizWrapper","styled","div","withConfig","displayName","componentId","QuestionCard","Button","button","quizData","question","options","answer","QuizChapter1","score","setScore","step","setStep","selected","setSelected","finished","setFinished","current","Layout","length","map","option","key","type","value","checked","onChange","onClick","handleSubmit","s","disabled"],"sourceRoot":""}