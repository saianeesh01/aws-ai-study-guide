{"version":3,"file":"component---src-pages-quiz-chapter-12-js-fd65ab7e1b91d15b964d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/quiz-chapter-12.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, isFullWidth = false }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\n        }}\n      >\n        <main>{children}</main>\n        {!isFullWidth && (\n          <footer\n            style={{\n              marginTop: `var(--space-5)`,\n              fontSize: `var(--font-sm)`,\n              color: \"#888\",\n            }}\n          >\n            © {new Date().getFullYear()} · Built for AWS AI learners\n          </footer>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/seo.js\nimport * as React from \"react\"\n\nexport function Head({ title, description = \"\" }) {\n  const siteTitle = \"AWS AI Study Guide\"\n  const siteDescription = description || \"Interactive learning for AWS AI\"\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\n  const author = \"Aneesh Mussim\"\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      <meta name=\"description\" content={siteDescription} />\n      <meta property=\"og:title\" content={title || siteTitle} />\n      <meta property=\"og:description\" content={siteDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={title || siteTitle} />\n      <meta name=\"twitter:description\" content={siteDescription} />\n    </>\n  )\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Head } from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\n// 🔁 Utility to shuffle questions\nfunction shuffleArray(array) {\n  return [...array].sort(() => Math.random() - 0.5)\n}\n\n// 💅 Styled Components\nconst Wrapper = styled.div`\n  background: black;\n  color: #00ff90;\n  font-family: \"Courier New\", monospace;\n  padding: 3rem 2rem;\n  min-height: 100vh;\n\n  h1 {\n    margin-bottom: 2rem;\n  }\n\n  .question {\n    margin-bottom: 2rem;\n  }\n\n  button {\n    background: #00ff90;\n    color: black;\n    border: none;\n    padding: 0.5rem 1rem;\n    margin-top: 1rem;\n    margin-right: 1rem;\n    border-radius: 6px;\n    cursor: pointer;\n    font-weight: bold;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #00cc70;\n    }\n  }\n\n  .feedback {\n    margin-top: 1rem;\n    font-weight: bold;\n  }\n\n  .review {\n    margin-top: 2rem;\n    background: #111;\n    padding: 1rem;\n    border-radius: 10px;\n    border: 1px solid #00ff90;\n  }\n\n  .correct {\n    color: #00ff90;\n  }\n\n  .wrong {\n    color: red;\n  }\n\n  .button-nav {\n    margin-top: 2rem;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 1rem;\n\n    a, button {\n      background: #00ff90;\n      color: black;\n      font-weight: bold;\n      border: none;\n      padding: 0.6rem 1.2rem;\n      border-radius: 6px;\n      text-decoration: none;\n      cursor: pointer;\n      transition: background 0.3s ease;\n\n      &:hover {\n        background: #00cc70;\n      }\n    }\n  }\n`\n\n// 📚 Question Set (abbreviated for brevity)\nconst allQuestions = [\n\n        {\n          question: \"What AWS tool helps detect bias in ML models?\",\n          options: [\"SageMaker Ground Truth\", \"Clarify\", \"Forecast\", \"Comprehend\"],\n          answer: \"Clarify\",\n          explanation: \"SageMaker Clarify provides bias detection and explainability features.\"\n        },\n        {\n          question: \"Why is fairness important in AI?\",\n          options: [\"To increase inference speed\", \"To reduce storage costs\", \"To avoid discrimination\", \"To improve UI design\"],\n          answer: \"To avoid discrimination\",\n          explanation: \"Unfair models can negatively impact users and lead to legal/ethical issues.\"\n        },\n        {\n          question: \"You’re using biased historical data for predictions. What should you do?\",\n          options: [\"Ignore it\", \"Add random noise\", \"Perform data audit\", \"Retrain the model\"],\n          answer: \"Perform data audit\",\n          explanation: \"Understanding bias in the dataset is the first step to mitigating it.\"\n        },\n        {\n          question: \"What is explainability in ML used for?\",\n          options: [\"Improving accuracy\", \"Understanding model decisions\", \"Reducing latency\", \"Encrypting data\"],\n          answer: \"Understanding model decisions\",\n          explanation: \"It allows stakeholders to trust and verify model behavior.\"\n        },\n        {\n          question: \"Which AWS service supports fairness monitoring and bias reports?\",\n          options: [\"SageMaker Pipelines\", \"SageMaker Clarify\", \"Textract\", \"Polly\"],\n          answer: \"SageMaker Clarify\",\n          explanation: \"Clarify checks for bias in both data and model output.\"\n        },\n        {\n          question: \"What is SHAP in AI explainability?\",\n          options: [\"A security protocol\", \"A translation tool\", \"A visualization method\", \"A feature attribution method\"],\n          answer: \"A feature attribution method\",\n          explanation: \"SHAP explains predictions by assigning feature importance values.\"\n        },\n        {\n          question: \"What is individual fairness?\",\n          options: [\"Privacy guarantees\", \"Treating similar people similarly\", \"Encrypting inputs\", \"Model transparency\"],\n          answer: \"Treating similar people similarly\",\n          explanation: \"It ensures fairness at the individual level, not just across groups.\"\n        },\n        {\n          question: \"What is the danger of optimizing only for accuracy?\",\n          options: [\"Too much fairness\", \"Slow inference\", \"Ignoring fairness and minority errors\", \"Bias is removed\"],\n          answer: \"Ignoring fairness and minority errors\",\n          explanation: \"A high accuracy may still hide unfair treatment of smaller groups.\"\n        },\n        {\n          question: \"Which data factor is key to fairness?\",\n          options: [\"Data size\", \"Cloud region\", \"Data diversity\", \"Data age\"],\n          answer: \"Data diversity\",\n          explanation: \"Training data must represent all groups to avoid bias.\"\n        },\n        {\n          question: \"How does bias affect ML models?\",\n          options: [\"Speeds up inference\", \"Improves generalization\", \"Causes unfair predictions\", \"Improves validation accuracy\"],\n          answer: \"Causes unfair predictions\",\n          explanation: \"Bias results in models that systematically favor or disadvantage groups.\"\n        },\n      \n        // Real-World Scenarios\n        {\n          question: \"A job screening model rejects female candidates disproportionately. What is likely the cause?\",\n          options: [\"Overfitting\", \"Feature scaling\", \"Bias in training data\", \"Too many hidden layers\"],\n          answer: \"Bias in training data\",\n          explanation: \"Historical hiring data may reflect societal bias, which the model learns.\"\n        },\n        {\n          question: \"A bank is questioned about how its credit model works. What feature would help?\",\n          options: [\"Explainability\", \"Hyperparameter tuning\", \"Early stopping\", \"CloudWatch\"],\n          answer: \"Explainability\",\n          explanation: \"Explainable AI techniques justify predictions to users and regulators.\"\n        },\n        {\n          question: \"A social app makes recommendations that favor one group. What tool helps identify this?\",\n          options: [\"Textract\", \"Personalize\", \"Clarify\", \"GuardDuty\"],\n          answer: \"Clarify\",\n          explanation: \"Clarify provides group-wise fairness reports to detect bias.\"\n        },\n        {\n          question: \"An AI-generated loan approval system is audited. What feature proves it was fair?\",\n          options: [\"Model accuracy\", \"CloudFormation templates\", \"Bias reports from Clarify\", \"Notebook instance logs\"],\n          answer: \"Bias reports from Clarify\",\n          explanation: \"Clarify can track training and inference fairness statistics.\"\n        },\n        {\n          question: \"A hospital uses ML to prioritize patients but skips gender as a feature. Is this enough?\",\n          options: [\"Yes, always fair\", \"No, indirect bias may remain\", \"Yes, if using AutoML\", \"Yes, if encrypted\"],\n          answer: \"No, indirect bias may remain\",\n          explanation: \"Other correlated variables can still cause indirect bias.\"\n        },\n        {\n          question: \"What AWS method ensures your model doesn’t memorize sensitive data?\",\n          options: [\"ReLU\", \"Batch inference\", \"Differential privacy\", \"Lambda functions\"],\n          answer: \"Differential privacy\",\n          explanation: \"Adds noise to protect individual records while training.\"\n        },\n        {\n          question: \"Your model shows high bias during evaluation. What next?\",\n          options: [\"Ship it\", \"Use more epochs\", \"Add dropout\", \"Rebalance and clean training data\"],\n          answer: \"Rebalance and clean training data\",\n          explanation: \"Unbiased, diverse data is critical to fairness.\"\n        },\n        {\n          question: \"You release an ML model and want users to understand its limits. What should you publish?\",\n          options: [\"CloudWatch metrics\", \"Encryption keys\", \"Model cards\", \"IAM policies\"],\n          answer: \"Model cards\",\n          explanation: \"Model cards describe how a model was trained and its limitations.\"\n        },\n        {\n          question: \"Which principle ensures ethical accountability in AI decisions?\",\n          options: [\"Low latency\", \"Differential inference\", \"Transparency\", \"CloudTrail logging\"],\n          answer: \"Transparency\",\n          explanation: \"Transparency helps users and auditors trust the AI system.\"\n        },\n        {\n          question: \"How can you prevent models from reflecting real-world inequalities?\",\n          options: [\"Use fewer features\", \"Avoid validation\", \"Introduce fairness checks\", \"Retrain often\"],\n          answer: \"Introduce fairness checks\",\n          explanation: \"Bias and fairness must be tested at every ML pipeline stage.\"\n        }\n      ]\n      \n  \n  \n\nexport default function QuizChapter12() {\n  const [questions] = React.useState(() => shuffleArray(allQuestions))\n  const [current, setCurrent] = React.useState(0)\n  const [selected, setSelected] = React.useState(null)\n  const [score, setScore] = React.useState(0)\n  const [showResult, setShowResult] = React.useState(false)\n  const [answers, setAnswers] = React.useState([])\n\n  const currentQ = questions[current]\n\n  const handleAnswer = (option) => {\n    setSelected(option)\n    setAnswers((prev) => [...prev, { ...currentQ, selected: option }])\n    if (option === currentQ.answer) setScore((s) => s + 1)\n  }\n\n  const nextQuestion = () => {\n    if (current + 1 < questions.length) {\n      setCurrent((c) => c + 1)\n      setSelected(null)\n    } else {\n      setShowResult(true)\n    }\n  }\n\n  const retryQuiz = () => {\n    setCurrent(0)\n    setSelected(null)\n    setScore(0)\n    setAnswers([])\n    setShowResult(false)\n  }\n\n  return (\n    <Layout>\n      <Wrapper>\n        <h1>📝 Quiz: Chapter 12:  Computer Vision with AWS (Rekognition, Textract)</h1>\n\n        {!showResult ? (\n          <div className=\"question\">\n            <p><strong>Q{current + 1}:</strong> {currentQ.question}</p>\n            {currentQ.options.map((opt) => (\n              <div key={opt}>\n                <button onClick={() => handleAnswer(opt)} disabled={selected !== null}>\n                  {opt}\n                </button>\n              </div>\n            ))}\n            {selected && (\n              <p className=\"feedback\">\n                {selected === currentQ.answer ? \"✅ Correct!\" : `❌ Incorrect. Correct: ${currentQ.answer}`}\n              </p>\n            )}\n            {selected && <button onClick={nextQuestion}>Next</button>}\n          </div>\n        ) : (\n          <div>\n            <h2>✅ Your Score: {score} / {questions.length}</h2>\n            <p>{score >= questions.length * 0.8 ? \"🎉 Awesome job!\" : \"📚 Review and try again!\"}</p>\n\n            <button onClick={retryQuiz}>🔁 Retry Quiz</button>\n\n            <div className=\"review\">\n              <h3>📝 Review:</h3>\n              {answers.map((item, i) => (\n                <div key={i}>\n                  <p><strong>Q{i + 1}:</strong> {item.question}</p>\n                  <p>\n                    Your Answer:{\" \"}\n                    <span className={item.selected === item.answer ? \"correct\" : \"wrong\"}>\n                      {item.selected}\n                    </span>\n                  </p>\n                  <p>Correct Answer: {item.answer}</p>\n                  <p><em>🧠 {item.explanation}</em></p>\n                  <hr />\n                </div>\n              ))}\n            </div>\n\n            <div className=\"button-nav\">\n              <Link to=\"/chapter-12\">← Back to Chapter 12</Link>\n              <Link to=\"/\">🏠 Home</Link>\n            </div>\n          </div>\n        )}\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport { Head }\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","Wrapper","styled","div","withConfig","displayName","componentId","allQuestions","question","options","answer","explanation","QuizChapter12","questions","shuffleArray","array","_toConsumableArray","sort","Math","random","current","setCurrent","selected","setSelected","score","setScore","showResult","setShowResult","answers","setAnswers","currentQ","Layout","length","onClick","retryQuiz","className","map","item","i","key","Link","to","opt","handleAnswer","option","prev","concat","s","disabled","nextQuestion","c"],"sourceRoot":""}