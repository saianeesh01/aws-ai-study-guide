{"version":3,"file":"component---src-pages-chapter-6-js-f7320a9ed9b72d43ea41.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashcardsChapter6.js","webpack://gatsby-starter-default/./src/pages/chapter-6.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, isFullWidth = false }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\n        }}\n      >\n        <main>{children}</main>\n        {!isFullWidth && (\n          <footer\n            style={{\n              marginTop: `var(--space-5)`,\n              fontSize: `var(--font-sm)`,\n              color: \"#888\",\n            }}\n          >\n            © {new Date().getFullYear()} · Built for AWS AI learners\n          </footer>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/seo.js\nimport * as React from \"react\"\n\nexport function Head({ title, description = \"\" }) {\n  const siteTitle = \"AWS AI Study Guide\"\n  const siteDescription = description || \"Interactive learning for AWS AI\"\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\n  const author = \"Aneesh Mussim\"\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      <meta name=\"description\" content={siteDescription} />\n      <meta property=\"og:title\" content={title || siteTitle} />\n      <meta property=\"og:description\" content={siteDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={title || siteTitle} />\n      <meta name=\"twitter:description\" content={siteDescription} />\n    </>\n  )\n}\n","import * as React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst Card = styled.div`\n  background: #111;\n  border: 1px solid #00ff90;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  font-family: \"Courier New\", monospace;\n  color: #00ff90;\n  animation: ${fadeIn} 0.5s ease;\n  transition: transform 0.4s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`\n\nconst Button = styled.button`\n  background: #00ff90;\n  color: black;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  margin-top: 1rem;\n  border-radius: 6px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #00cc70;\n  }\n`\n\nfunction shuffleArray(array) {\n  return [...array].sort(() => Math.random() - 0.5)\n}\n\nconst flashcards = [\n    { question: \"What is Amazon SageMaker?\", answer: \"A fully managed service to build, train, and deploy ML models.\" },\n    { question: \"What is the purpose of SageMaker Studio?\", answer: \"A web-based IDE for building and managing ML workflows.\" },\n    { question: \"Which AWS service automates model building?\", answer: \"SageMaker Autopilot.\" },\n    { question: \"What is SageMaker Ground Truth?\", answer: \"A tool to label data using human annotators or automation.\" },\n    { question: \"What is Amazon Rekognition used for?\", answer: \"Image and video analysis using deep learning.\" },\n    { question: \"What is Amazon Comprehend?\", answer: \"A service for natural language processing (NLP).\" },\n    { question: \"What does Amazon Textract do?\", answer: \"Extracts text and data from scanned documents.\" },\n    { question: \"Which service provides personalized recommendations?\", answer: \"Amazon Personalize.\" },\n    { question: \"What is Amazon Forecast used for?\", answer: \"Time series forecasting using ML.\" },\n    { question: \"What is Amazon Polly?\", answer: \"A service that turns text into realistic speech.\" },\n    { question: \"Which service helps build conversational interfaces?\", answer: \"Amazon Lex.\" },\n    { question: \"What is Amazon Translate?\", answer: \"Language translation using deep learning.\" },\n    { question: \"What does Amazon Transcribe do?\", answer: \"Converts speech to text.\" },\n    { question: \"What is a model endpoint in SageMaker?\", answer: \"A deployed model that can serve real-time predictions.\" },\n    { question: \"How does SageMaker Autopilot simplify ML?\", answer: \"It automatically selects algorithms and tunes models.\" },\n    { question: \"What is a notebook instance in SageMaker?\", answer: \"A compute environment to run Jupyter notebooks.\" },\n    { question: \"What role does AWS Lambda play in ML?\", answer: \"It can trigger ML inference and preprocess data.\" },\n    { question: \"What is data drift?\", answer: \"Changes in input data that reduce model accuracy over time.\" },\n    { question: \"What service helps monitor deployed models?\", answer: \"Amazon SageMaker Model Monitor.\" },\n    { question: \"What is batch inference?\", answer: \"Generating predictions on large batches of data.\" },\n    { question: \"How can you deploy multiple models in SageMaker?\", answer: \"Using multi-model endpoints.\" },\n    { question: \"What is AWS Marketplace for ML?\", answer: \"A catalog of pre-trained models and ML algorithms.\" },\n    { question: \"What is a container in SageMaker?\", answer: \"An isolated environment that packages code and dependencies.\" },\n    { question: \"Can SageMaker be used with custom ML frameworks?\", answer: \"Yes, via custom Docker containers.\" },\n    { question: \"What is transfer learning?\", answer: \"Using a pre-trained model and adapting it to a new task.\" },\n    { question: \"Why use SageMaker Pipelines?\", answer: \"To automate and manage end-to-end ML workflows.\" },\n    { question: \"How does SageMaker JumpStart help beginners?\", answer: \"Provides templates and pre-trained models to get started quickly.\" },\n    { question: \"What does 'Bring Your Own Model' mean?\", answer: \"Deploying a custom-trained model on SageMaker.\" },\n    { question: \"Which service supports real-time language translation?\", answer: \"Amazon Translate.\" },\n    { question: \"What type of learning does Lex use for conversation flows?\", answer: \"Supervised learning and natural language understanding.\" }\n  ]\n  \n\nexport default function FlashcardsChapter6() {\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\n  const [index, setIndex] = React.useState(0)\n  const [showAnswer, setShowAnswer] = React.useState(false)\n\n  const nextCard = () => {\n    setShowAnswer(false)\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\n  }\n\n  return (\n    <Card>\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\n      <p>{shuffledCards[index].question}</p>\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\n      <div>\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\n        </Button>\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\n          Next\n        </Button>\n      </div>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Head } from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport FlashcardsChapter6 from \"../components/FlashcardsChapter6\"\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n\n  a {\n    background: #00ff90;\n    color: black;\n    padding: 0.75rem 1.5rem;\n    border-radius: 8px;\n    text-decoration: none;\n    font-weight: bold;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #00cc70;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  background: black;\n  color: #00ff90;\n  font-family: \"Courier New\", monospace;\n  padding: 3rem 2rem;\n  min-height: 100vh;\n\n  h1, h2, h3 {\n    color: #00ff90;\n    margin-top: 2rem;\n  }\n\n  p, li {\n    line-height: 1.7;\n  }\n\n  ul {\n    margin-left: 1.5rem;\n  }\n\n  strong {\n    color: #00ffcc;\n  }\n\n  code {\n    background: #111;\n    padding: 0.2rem 0.4rem;\n    border-radius: 4px;\n    color: #00ffcc;\n  }\n\n  .diagram {\n    margin-top: 2rem;\n    background: #111;\n    padding: 1rem;\n    border-radius: 8px;\n    border: 1px solid #00ff90;\n    font-family: monospace;\n  }\n`;\n\nexport default function Chapter6Page() {\n  return (\n    <Layout>\n      <Wrapper>\n        <h1>🚁 Chapter 6: Model Deployment & Monitoring</h1>\n        <p>\n          Deploying a machine learning model means making it available for real-world use. Monitoring ensures it continues to perform well over time.\n        </p>\n\n        <h2>🚀 What is Model Deployment?</h2>\n        <p>\n          Model deployment is the process of integrating a trained machine learning model into a production environment, where it can start making real predictions.\n        </p>\n\n        <h3>Common Deployment Strategies:</h3>\n        <ul>\n          <li><strong>Batch Predictions</strong> – Process large volumes of data at scheduled intervals.</li>\n          <li><strong>Real-Time Inference (API)</strong> – Respond to user input instantly (e.g., chatbots, recommendation engines).</li>\n          <li><strong>Edge Deployment</strong> – Deploy models to devices like smartphones, IoT sensors, or drones.</li>\n        </ul>\n\n        <h2>🧰 AWS Tools for Deployment</h2>\n        <ul>\n          <li><strong>Amazon SageMaker Endpoints</strong> – Create scalable, real-time APIs.</li>\n          <li><strong>AWS Lambda</strong> – Lightweight serverless functions for simple deployment.</li>\n          <li><strong>Amazon ECS / EKS</strong> – Deploy using Docker containers for large-scale ML workloads.</li>\n          <li><strong>Amazon API Gateway</strong> – Expose your model as a secure RESTful API.</li>\n        </ul>\n\n        <h2>🧪 Post-Deployment Monitoring</h2>\n        <p>Even a high-performing model can degrade over time due to:</p>\n        <ul>\n          <li><strong>Data Drift</strong> – New data patterns differ from training data.</li>\n          <li><strong>Model Drift</strong> – Performance decays as real-world scenarios evolve.</li>\n        </ul>\n\n        <h3>What to monitor:</h3>\n        <ul>\n          <li>Prediction accuracy</li>\n          <li>Latency and throughput</li>\n          <li>Errors and edge cases</li>\n          <li>Resource usage (CPU, memory)</li>\n        </ul>\n\n        <h3>AWS Monitoring Tools:</h3>\n        <ul>\n          <li><strong>Amazon CloudWatch</strong> – Logs and alerts for model health.</li>\n          <li><strong>Amazon SageMaker Model Monitor</strong> – Detects concept and data drift.</li>\n        </ul>\n\n        <h2>🌎 Real-World Example</h2>\n        <p><strong>Fraud Detection System:</strong></p>\n        <ul>\n          <li>Deployed to monitor live transactions.</li>\n          <li>Sends real-time alerts when suspicious patterns are found.</li>\n          <li>Auto-retraining pipeline updates the model every month.</li>\n        </ul>\n\n        <h2>📊 Deployment Workflow Diagram</h2>\n        <div className=\"diagram\">\n          Raw Data ➞ Preprocessing ➞ Model Training ➞ Evaluation ➞ Model Registry ➞ Deployment ➞ Monitoring\n        </div>\n\n        <h2>🧠 Key Takeaways</h2>\n        <ul>\n          <li>Model deployment makes predictions available to users.</li>\n          <li>Use AWS SageMaker, Lambda, or ECS depending on scale.</li>\n          <li>Monitoring is critical to detect data or model drift.</li>\n          <li>Automating retraining pipelines ensures ongoing performance.</li>\n        </ul>\n        <FlashcardsChapter6 />\n        <ButtonGroup>\n          <Link to=\"/quiz-chapter-6\">📝 Quiz</Link>\n          <Link to=\"/\">🏠 Back to Home</Link>\n        </ButtonGroup>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport { Head }\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashcardsChapter6","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","ButtonGroup","Wrapper","Chapter6Page","Layout","className","Link","to"],"sourceRoot":""}