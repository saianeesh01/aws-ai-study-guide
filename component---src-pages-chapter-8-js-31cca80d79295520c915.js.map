{"version":3,"file":"component---src-pages-chapter-8-js-31cca80d79295520c915.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashCardsChapter8.js","webpack://gatsby-starter-default/./src/pages/chapter-8.js"],"sourcesContent":["import * as React from \"react\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children, isFullWidth = false }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\r\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        {!isFullWidth && (\r\n          <footer\r\n            style={{\r\n              marginTop: `var(--space-5)`,\r\n              fontSize: `var(--font-sm)`,\r\n              color: \"#888\",\r\n            }}\r\n          >\r\n            © {new Date().getFullYear()} · Built for AWS AI learners\r\n          </footer>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// src/components/seo.js\r\nimport * as React from \"react\"\r\n\r\nexport function Head({ title, description = \"\" }) {\r\n  const siteTitle = \"AWS AI Study Guide\"\r\n  const siteDescription = description || \"Interactive learning for AWS AI\"\r\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\r\n  const author = \"Aneesh Mussim\"\r\n\r\n  return (\r\n    <>\r\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\r\n      <meta name=\"description\" content={siteDescription} />\r\n      <meta property=\"og:title\" content={title || siteTitle} />\r\n      <meta property=\"og:description\" content={siteDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={author} />\r\n      <meta name=\"twitter:title\" content={title || siteTitle} />\r\n      <meta name=\"twitter:description\" content={siteDescription} />\r\n    </>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport styled, { keyframes } from \"styled-components\"\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`\r\n\r\nconst Card = styled.div`\r\n  background: #111;\r\n  border: 1px solid #00ff90;\r\n  border-radius: 10px;\r\n  padding: 2rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n  font-family: \"Courier New\", monospace;\r\n  color: #00ff90;\r\n  animation: ${fadeIn} 0.5s ease;\r\n  transition: transform 0.4s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  background: #00ff90;\r\n  color: black;\r\n  border: none;\r\n  padding: 0.6rem 1.2rem;\r\n  margin-top: 1rem;\r\n  border-radius: 6px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #00cc70;\r\n  }\r\n`\r\n\r\nfunction shuffleArray(array) {\r\n  return [...array].sort(() => Math.random() - 0.5)\r\n}\r\n\r\nconst flashcards = [\r\n    { question: \"What is Amazon Rekognition?\", answer: \"A computer vision service to detect objects, scenes, and faces in images and videos.\" },\r\n    { question: \"What is Amazon Textract used for?\", answer: \"Extracts text, forms, and tables from scanned documents.\" },\r\n    { question: \"Does Rekognition support facial analysis?\", answer: \"Yes, it can detect emotions, age range, gender, and facial landmarks.\" },\r\n    { question: \"Can Textract understand document structure?\", answer: \"Yes, it extracts data as key-value pairs and tables.\" },\r\n    { question: \"What file formats does Rekognition support?\", answer: \"JPEG and PNG for images, MP4 for videos.\" },\r\n    { question: \"Can Rekognition detect unsafe content?\", answer: \"Yes, using moderation labels like nudity or violence.\" },\r\n    { question: \"Does Textract require templates?\", answer: \"No, Textract is template-free and can process various layouts.\" },\r\n    { question: \"What is a bounding box in Rekognition?\", answer: \"Coordinates that define where an object or face is in the image.\" },\r\n    { question: \"What is OCR?\", answer: \"Optical Character Recognition — Textract uses this to detect text in images.\" },\r\n    { question: \"Can Rekognition perform celebrity recognition?\", answer: \"Yes, for known public figures.\" },\r\n    { question: \"What is a use case of Textract in finance?\", answer: \"Automating form input from scanned invoices or receipts.\" },\r\n    { question: \"Can Textract extract handwriting?\", answer: \"Yes, but it's less accurate than printed text.\" },\r\n    { question: \"Which AWS service detects PPE like helmets or gloves?\", answer: \"Amazon Rekognition.\" },\r\n    { question: \"Can Rekognition track people in real-time video?\", answer: \"Yes, using the Video API with Kinesis.\" },\r\n    { question: \"How is Textract different from simple OCR?\", answer: \"Textract understands context, structure, and relationships.\" },\r\n    { question: \"What’s a 'feature type' in Textract?\", answer: \"Data element type to extract — KEY_VALUE_SET or TABLE.\" },\r\n    { question: \"Does Rekognition require training models?\", answer: \"No, it's pre-trained and managed.\" },\r\n    { question: \"How does Textract output structured data?\", answer: \"As JSON with blocks for text, key-value pairs, tables, etc.\" },\r\n    { question: \"Can Rekognition do face comparison?\", answer: \"Yes, it matches faces against a collection or image.\" },\r\n    { question: \"What regions is Rekognition available in?\", answer: \"Many global AWS regions — check docs for updates.\" },\r\n    { question: \"What is a confidence score?\", answer: \"The certainty level that Rekognition has in its predictions.\" },\r\n    { question: \"Use case for Textract in healthcare?\", answer: \"Digitizing handwritten medical notes and forms.\" },\r\n    { question: \"Does Rekognition detect text?\", answer: \"Yes, but Textract is better for structured documents.\" },\r\n    { question: \"Textract’s accuracy for printed forms?\", answer: \"Very high for clean, high-resolution forms.\" },\r\n    { question: \"What is video label detection?\", answer: \"Detecting objects/scenes in video frames over time.\" },\r\n    { question: \"Can Rekognition be used for surveillance?\", answer: \"Yes, for people/vehicle detection and face matching.\" },\r\n    { question: \"Textract vs Comprehend?\", answer: \"Textract extracts raw text; Comprehend analyzes meaning.\" },\r\n    { question: \"Can Rekognition count people in an image?\", answer: \"Yes, using object or face detection APIs.\" },\r\n    { question: \"Does Textract require human review?\", answer: \"Optional — Amazon A2I (Augmented AI) can be added.\" },\r\n    { question: \"What is a Face Collection?\", answer: \"A database of known faces stored for comparison in Rekognition.\" }\r\n  ]\r\n\r\nexport default function FlashCardsChapter8() {\r\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\r\n  const [index, setIndex] = React.useState(0)\r\n  const [showAnswer, setShowAnswer] = React.useState(false)\r\n\r\n  const nextCard = () => {\r\n    setShowAnswer(false)\r\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\r\n      <p>{shuffledCards[index].question}</p>\r\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\r\n      <div>\r\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\r\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\r\n        </Button>\r\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n","import * as React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { Head } from \"../components/seo\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nimport FlashcardsChapter8 from \"../components/FlashCardsChapter8\"\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n\r\n  a {\r\n    background: #00ff90;\r\n    color: black;\r\n    padding: 0.75rem 1.5rem;\r\n    border-radius: 8px;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n    transition: background 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #00cc70;\r\n    }\r\n  }\r\n`\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  color: #00ff90;\r\n  font-family: \"Courier New\", monospace;\r\n  padding: 3rem 2rem;\r\n  min-height: 100vh;\r\n\r\n  h1, h2, h3 {\r\n    color: #00ff90;\r\n    margin-top: 2rem;\r\n  }\r\n\r\n  p, li {\r\n    line-height: 1.7;\r\n  }\r\n\r\n  ul {\r\n    margin-left: 1.5rem;\r\n  }\r\n\r\n  strong {\r\n    color: #00ffcc;\r\n  }\r\n\r\n  code {\r\n    background: #111;\r\n    padding: 0.2rem 0.4rem;\r\n    border-radius: 4px;\r\n    color: #00ffcc;\r\n  }\r\n`;\r\n\r\nexport default function Chapter8Page() {\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <h1>📸 Chapter 8: Computer Vision with AWS</h1>\r\n        <p>Computer vision enables machines to interpret and analyze images and videos. AWS offers Rekognition and Textract to handle visual intelligence without requiring custom model training.</p>\r\n\r\n        <h2>🔍 Amazon Rekognition</h2>\r\n        <ul>\r\n          <li>Detects objects, faces, scenes, and text in images or video.</li>\r\n          <li>Supports facial analysis, face comparison, celebrity recognition, and unsafe content detection.</li>\r\n        </ul>\r\n\r\n        <h3>Rekognition Use Cases:</h3>\r\n        <ul>\r\n          <li>Smart access control systems using facial match</li>\r\n          <li>Social media content moderation</li>\r\n          <li>Retail surveillance and people tracking</li>\r\n        </ul>\r\n\r\n        <h2>📄 Amazon Textract</h2>\r\n        <ul>\r\n          <li>Goes beyond OCR by understanding key-value pairs, tables, and layout in documents.</li>\r\n          <li>Supports handwritten and printed text.</li>\r\n          <li>Can extract specific data via queries.</li>\r\n        </ul>\r\n\r\n        <h3>Textract Use Cases:</h3>\r\n        <ul>\r\n          <li>Invoice and receipt processing</li>\r\n          <li>Automating form data entry (claims, applications)</li>\r\n          <li>Legal document indexing</li>\r\n        </ul>\r\n\r\n        <h2>🧠 Summary</h2>\r\n        <p><strong>Rekognition:</strong> Best for image and video analysis.</p>\r\n        <p><strong>Textract:</strong> Best for extracting structured data from documents.</p>\r\n\r\n        <h3>Integration:</h3>\r\n        <ul>\r\n          <li>Works with S3, Lambda, EventBridge for automation</li>\r\n          <li>Integrates easily into backend pipelines</li>\r\n        </ul>\r\n        <FlashcardsChapter8 />\r\n        <ButtonGroup>\r\n                  <Link to=\"/quiz-chapter-8\">📝 Quiz</Link>\r\n                  <Link to=\"/\">🏠 Back to Home</Link>\r\n                </ButtonGroup>\r\n      </Wrapper>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport { Head };\r\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashCardsChapter8","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","ButtonGroup","Wrapper","Chapter8Page","Layout","FlashcardsChapter8","Link","to"],"sourceRoot":""}