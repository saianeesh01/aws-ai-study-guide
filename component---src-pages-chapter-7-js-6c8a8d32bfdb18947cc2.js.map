{"version":3,"file":"component---src-pages-chapter-7-js-6c8a8d32bfdb18947cc2.js","mappings":"mJA8BA,IA3BeA,IAAwC,IAAvC,SAAEC,EAAQ,YAAEC,GAAc,GAAOF,EAC/C,OACEG,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OACEC,MAAO,CACLC,OAAQ,SACRC,SAAUJ,EAAc,OAAS,sBACjCK,QAASL,EAAc,IAAM,uBAG/BC,EAAAA,cAAA,YAAOF,IACLC,GACAC,EAAAA,cAAA,UACEC,MAAO,CACLI,UAAW,iBACXC,SAAU,iBACVC,MAAO,SAEV,MACI,IAAIC,MAAOC,cAAc,iCAIjC,C,qECvBA,SAASC,EAAIb,GAA+B,IAA9B,MAAEc,EAAK,YAAEC,EAAc,IAAIf,EAC9C,MAAMgB,EAAY,qBACZC,EAAkBF,GAAe,kCAIvC,OACEZ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQW,EAAQ,GAAGA,OAAWE,IAAcA,GAC5Cb,EAAAA,cAAA,QAAMe,KAAK,cAAcC,QAASF,IAClCd,EAAAA,cAAA,QAAMiB,SAAS,WAAWD,QAASL,GAASE,IAC5Cb,EAAAA,cAAA,QAAMiB,SAAS,iBAAiBD,QAASF,IACzCd,EAAAA,cAAA,QAAMiB,SAAS,UAAUD,QAAQ,YACjChB,EAAAA,cAAA,QAAMiB,SAAS,SAASD,QAVZ,qDAWZhB,EAAAA,cAAA,QAAMe,KAAK,eAAeC,QAAQ,YAClChB,EAAAA,cAAA,QAAMe,KAAK,kBAAkBC,QAXlB,kBAYXhB,EAAAA,cAAA,QAAMe,KAAK,gBAAgBC,QAASL,GAASE,IAC7Cb,EAAAA,cAAA,QAAMe,KAAK,sBAAsBC,QAASF,IAGhD,C,gKCpBA,MAAMI,GAASC,EAAAA,EAAAA,WAAS,uFAWlBC,EAAOC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAVJ,CAAU,2PASRH,GAQTQ,EAASL,EAAAA,QAAOM,OAAMJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAbJ,CAAa,qMAoB5B,MAAMO,EAAa,CACf,CAAEC,SAAU,sCAAuCC,OAAQ,sFAC3D,CAAED,SAAU,8DAA+DC,OAAQ,sBACnF,CAAED,SAAU,2CAA4CC,OAAQ,8DAChE,CAAED,SAAU,4DAA6DC,OAAQ,iBACjF,CAAED,SAAU,qCAAsCC,OAAQ,0DAC1D,CAAED,SAAU,qCAAsCC,OAAQ,sEAC1D,CAAED,SAAU,8BAA+BC,OAAQ,4EACnD,CAAED,SAAU,uDAAwDC,OAAQ,0CAC5E,CAAED,SAAU,+BAAgCC,OAAQ,8EACpD,CAAED,SAAU,gCAAiCC,OAAQ,2DACrD,CAAED,SAAU,qCAAsCC,OAAQ,yDAC1D,CAAED,SAAU,mCAAoCC,OAAQ,0DACxD,CAAED,SAAU,wCAAyCC,OAAQ,0DAC7D,CAAED,SAAU,6DAA8DC,OAAQ,4CAClF,CAAED,SAAU,kEAAmEC,OAAQ,2DACvF,CAAED,SAAU,wCAAyCC,OAAQ,4DAC7D,CAAED,SAAU,0CAA2CC,OAAQ,oEAC/D,CAAED,SAAU,+CAAgDC,OAAQ,wDACpE,CAAED,SAAU,0CAA2CC,OAAQ,mFAC/D,CAAED,SAAU,yCAA0CC,OAAQ,sDAC9D,CAAED,SAAU,wDAAyDC,OAAQ,sDAC7E,CAAED,SAAU,2CAA4CC,OAAQ,sDAChE,CAAED,SAAU,6DAA8DC,OAAQ,8BAClF,CAAED,SAAU,6BAA8BC,OAAQ,6EAClD,CAAED,SAAU,2DAA4DC,OAAQ,uEAChF,CAAED,SAAU,sCAAuCC,OAAQ,gEAC3D,CAAED,SAAU,mCAAoCC,OAAQ,yDACxD,CAAED,SAAU,6DAA8DC,OAAQ,2CAClF,CAAED,SAAU,qDAAsDC,OAAQ,qEAC1E,CAAED,SAAU,qDAAsDC,OAAQ,oEAG/D,SAASC,IACtB,MAAOC,GAAiBhC,EAAAA,UAAe,KAAMiC,OAtCzBC,EAsCsCN,GArCnDO,EAAAA,EAAAA,GAAID,GAAOE,MAAK,IAAMC,KAAKC,SAAW,KAD/C,IAAsBJ,CAsCiD,KAC9DK,EAAOC,GAAYxC,EAAAA,SAAe,IAClCyC,EAAYC,GAAiB1C,EAAAA,UAAe,GAOnD,OACEA,EAAAA,cAACoB,EAAI,KACHpB,EAAAA,cAAA,UAAI,gBAAcuC,EAAQ,EAAE,OAAKP,EAAcW,QAC/C3C,EAAAA,cAAA,SAAIgC,EAAcO,GAAOV,UACxBY,GAAczC,EAAAA,cAAA,SAAGA,EAAAA,cAAA,cAAQ,WAAgB,IAAEgC,EAAcO,GAAOT,QACjE9B,EAAAA,cAAA,WACEA,EAAAA,cAAC0B,EAAM,CAACkB,QAASA,IAAMF,GAAeG,IAAUA,KAC7CJ,EAAa,cAAgB,eAEhCzC,EAAAA,cAAC0B,EAAM,CAACkB,QAdGE,KACfJ,GAAc,GACdF,GAAUK,IAAUA,EAAO,GAAKb,EAAcW,QAAO,EAYtB1C,MAAO,CAAE8C,WAAY,SAAU,SAMlE,CCtGA,MAAMC,EAAc3B,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,wOAoBxB4B,EAAc5B,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,kaA4Cf,SAAS6B,IACtB,OACElD,EAAAA,cAACmD,EAAAA,EAAM,KACLnD,EAAAA,cAACiD,EAAW,KACVjD,EAAAA,cAAA,UAAI,uDACJA,EAAAA,cAAA,SAAG,sKAEHA,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,eAGRA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,UAAI,4BACJA,EAAAA,cAAA,UAAI,qCAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,UAAI,+BAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,UAAI,6BAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAAA,UAAI,sCAKVA,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAAA,SAAG,0EACHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,kDACJA,EAAAA,cAAA,UAAI,qCACJA,EAAAA,cAAA,UAAI,+BACJA,EAAAA,cAAA,UAAI,mCAGNA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,SAAG,wFAEHA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAG,+FACHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,0BACJA,EAAAA,cAAA,UAAI,qCACJA,EAAAA,cAAA,UAAI,iCAGNA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAG,6FAEHA,EAAAA,cAAA,UAAI,mBACJA,EAAAA,cAAA,SAAG,8EACHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,iCACJA,EAAAA,cAAA,UAAI,4CAGNA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,SAAG,uEACHA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,mDACJA,EAAAA,cAAA,UAAI,4DAGNA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,yCACJA,EAAAA,cAAA,UAAI,8CACJA,EAAAA,cAAA,UAAI,gCACJA,EAAAA,cAAA,UAAI,uCAENA,EAAAA,cAAC+B,EAAkB,MACnB/B,EAAAA,cAACgD,EAAW,KACVhD,EAAAA,cAACoD,EAAAA,GAAI,CAACC,GAAG,mBAAkB,WAC3BrD,EAAAA,cAACoD,EAAAA,GAAI,CAACC,GAAG,KAAI,qBAKvB,C","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashcardsChapter7.js","webpack://gatsby-starter-default/./src/pages/chapter-7.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, isFullWidth = false }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\n        }}\n      >\n        <main>{children}</main>\n        {!isFullWidth && (\n          <footer\n            style={{\n              marginTop: `var(--space-5)`,\n              fontSize: `var(--font-sm)`,\n              color: \"#888\",\n            }}\n          >\n            © {new Date().getFullYear()} · Built for AWS AI learners\n          </footer>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/seo.js\nimport * as React from \"react\"\n\nexport function Head({ title, description = \"\" }) {\n  const siteTitle = \"AWS AI Study Guide\"\n  const siteDescription = description || \"Interactive learning for AWS AI\"\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\n  const author = \"Aneesh Mussim\"\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      <meta name=\"description\" content={siteDescription} />\n      <meta property=\"og:title\" content={title || siteTitle} />\n      <meta property=\"og:description\" content={siteDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={title || siteTitle} />\n      <meta name=\"twitter:description\" content={siteDescription} />\n    </>\n  )\n}\n","import * as React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst Card = styled.div`\n  background: #111;\n  border: 1px solid #00ff90;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  font-family: \"Courier New\", monospace;\n  color: #00ff90;\n  animation: ${fadeIn} 0.5s ease;\n  transition: transform 0.4s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`\n\nconst Button = styled.button`\n  background: #00ff90;\n  color: black;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  margin-top: 1rem;\n  border-radius: 6px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #00cc70;\n  }\n`\n\nfunction shuffleArray(array) {\n  return [...array].sort(() => Math.random() - 0.5)\n}\n\nconst flashcards = [\n    { question: \"What is Amazon Comprehend used for?\", answer: \"Extracting insights like sentiment, entities, and key phrases from text using NLP.\" },\n    { question: \"Which AWS service analyzes customer feedback for sentiment?\", answer: \"Amazon Comprehend.\" },\n    { question: \"What does Amazon Lex allow you to build?\", answer: \"Conversational interfaces (chatbots) using voice and text.\" },\n    { question: \"Which service converts text into natural-sounding speech?\", answer: \"Amazon Polly.\" },\n    { question: \"What is Amazon Translate used for?\", answer: \"Neural machine translation between multiple languages.\" },\n    { question: \"What is entity recognition in NLP?\", answer: \"Identifying specific data like names, dates, or locations in text.\" },\n    { question: \"What is sentiment analysis?\", answer: \"Determining if a piece of text is positive, negative, neutral, or mixed.\" },\n    { question: \"Can Amazon Comprehend work with custom entity types?\", answer: \"Yes, through Amazon Comprehend Custom.\" },\n    { question: \"What is a bot in Amazon Lex?\", answer: \"A virtual agent that handles conversations through intents and utterances.\" },\n    { question: \"What are slots in Amazon Lex?\", answer: \"Parameters Lex gathers from users to fulfill an intent.\" },\n    { question: \"What are utterances in Amazon Lex?\", answer: \"Sample phrases a user might say to trigger an intent.\" },\n    { question: \"What is an intent in Amazon Lex?\", answer: \"A goal the user wants to achieve (e.g., 'BookFlight').\" },\n    { question: \"What is a voice ID in Polly used for?\", answer: \"To choose a specific voice model for speech synthesis.\" },\n    { question: \"What format does Polly support for advanced speech markup?\", answer: \"SSML (Speech Synthesis Markup Language).\" },\n    { question: \"What is real-time translation with Amazon Translate useful for?\", answer: \"Chat apps, multilingual websites, or real-time support.\" },\n    { question: \"What is topic modeling in Comprehend?\", answer: \"Grouping documents by common themes without supervision.\" },\n    { question: \"What does Amazon Comprehend Medical do?\", answer: \"Analyzes healthcare text for medical entities and relationships.\" },\n    { question: \"Can you translate documents using Translate?\", answer: \"Yes, Translate supports large text/doc translations.\" },\n    { question: \"How does Polly improve user engagement?\", answer: \"Converts written content into lifelike audio for accessibility and interaction.\" },\n    { question: \"What’s a real-world use of Amazon Lex?\", answer: \"Voice-based virtual assistants in contact centers.\" },\n    { question: \"Can Amazon Translate auto-detect the source language?\", answer: \"Yes, it detects the source language automatically.\" },\n    { question: \"Can Polly be used in IoT or mobile apps?\", answer: \"Yes, it supports real-time speech in applications.\" },\n    { question: \"What AWS service helps analyze unstructured clinical text?\", answer: \"Amazon Comprehend Medical.\" },\n    { question: \"How does Comprehend scale?\", answer: \"Fully managed and scalable with support for real-time and batch analysis.\" },\n    { question: \"What’s a benefit of using Polly over pre-recorded audio?\", answer: \"Dynamically generate speech at runtime without storing audio files.\" },\n    { question: \"How does Lex integrate with Lambda?\", answer: \"You can use Lambda functions to fulfill intents dynamically.\" },\n    { question: \"What is a channel in Amazon Lex?\", answer: \"Integration path like Slack, Facebook Messenger, etc.\" },\n    { question: \"What is the max number of characters per request in Polly?\", answer: \"3000 characters for standard API calls.\" },\n    { question: \"How does Translate handle formatting (e.g., HTML)?\", answer: \"Supports tags like HTML to preserve structure during translation.\" },\n    { question: \"What makes Comprehend useful for social listening?\", answer: \"It can extract sentiments and topics from social media content.\" }\n  ]\n\nexport default function FlashcardsChapter7() {\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\n  const [index, setIndex] = React.useState(0)\n  const [showAnswer, setShowAnswer] = React.useState(false)\n\n  const nextCard = () => {\n    setShowAnswer(false)\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\n  }\n\n  return (\n    <Card>\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\n      <p>{shuffledCards[index].question}</p>\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\n      <div>\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\n        </Button>\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\n          Next\n        </Button>\n      </div>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Head } from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport FlashcardsChapter7 from \"../components/FlashcardsChapter7\"\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n\n  a {\n    background: #00ff90;\n    color: black;\n    padding: 0.75rem 1.5rem;\n    border-radius: 8px;\n    text-decoration: none;\n    font-weight: bold;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #00cc70;\n    }\n  }\n`\nconst PageWrapper = styled.div`\n  background: black;\n  color: #00ff90;\n  padding: 3rem 2rem;\n  font-family: \"Courier New\", monospace;\n  min-height: 100vh;\n\n  h1, h2, h3 {\n    color: #00ff90;\n    margin-top: 2rem;\n  }\n\n  p, li {\n    line-height: 1.7;\n  }\n\n  ul {\n    margin-left: 1.5rem;\n  }\n\n  code {\n    background: #111;\n    padding: 0.3rem 0.5rem;\n    border-radius: 5px;\n    color: #00ffcc;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 2rem;\n  }\n\n  th, td {\n    border: 1px solid #00ff90;\n    padding: 0.75rem;\n    text-align: left;\n  }\n\n  th {\n    background-color: #111;\n  }\n`\n\nexport default function Chapter7Page() {\n  return (\n    <Layout>\n      <PageWrapper>\n        <h1>🗣️ Chapter 7: Natural Language Processing with AWS</h1>\n        <p>Natural Language Processing (NLP) helps machines understand and interact with human language. AWS offers managed services that simplify building NLP-powered apps.</p>\n\n        <h2>🧩 NLP Services Overview</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Service</th>\n              <th>Purpose</th>\n              <th>Use Cases</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Amazon Comprehend</td>\n              <td>Text analysis & insights</td>\n              <td>Sentiment, entities, key phrases</td>\n            </tr>\n            <tr>\n              <td>Amazon Lex</td>\n              <td>Conversational bots</td>\n              <td>Chatbots, voice interfaces</td>\n            </tr>\n            <tr>\n              <td>Amazon Polly</td>\n              <td>Text-to-speech</td>\n              <td>Accessibility, narration</td>\n            </tr>\n            <tr>\n              <td>Amazon Translate</td>\n              <td>Language translation</td>\n              <td>Localization, multilingual chat</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <h2>📘 Amazon Comprehend</h2>\n        <p>Comprehend uses machine learning to analyze text and uncover insights.</p>\n        <ul>\n          <li>Detects sentiment: positive, negative, neutral</li>\n          <li>Extracts entities and key phrases</li>\n          <li>Supports language detection</li>\n          <li>Supports custom classification</li>\n        </ul>\n\n        <h3>Example Use Case:</h3>\n        <p>A support system uses Comprehend to tag emails by urgency and detect key complaints.</p>\n\n        <h2>💬 Amazon Lex</h2>\n        <p>Amazon Lex builds chatbots and voice assistants using natural language understanding (NLU).</p>\n        <ul>\n          <li>Recognizes user intent</li>\n          <li>Supports multi-turn conversations</li>\n          <li>Handles voice and text input</li>\n        </ul>\n\n        <h3>Example Flow:</h3>\n        <p>User: \"Transfer $50 to Sam\" → Lex extracts intent and slots → Confirms and triggers logic</p>\n\n        <h2>🔊 Amazon Polly</h2>\n        <p>Polly turns text into realistic speech with multiple languages and voices.</p>\n        <ul>\n          <li>Natural-sounding voice output</li>\n          <li>Useful for screen readers and voice UIs</li>\n        </ul>\n\n        <h2>🌍 Amazon Translate</h2>\n        <p>Translate enables real-time language translation for 75+ languages.</p>\n        <ul>\n          <li>Used in chat apps, global sites, and e-commerce</li>\n          <li>Neural translation models provide context-aware results</li>\n        </ul>\n\n        <h2>🧠 Summary</h2>\n        <ul>\n          <li>Comprehend extracts meaning from text</li>\n          <li>Lex builds intelligent voice/text chatbots</li>\n          <li>Polly converts text to audio</li>\n          <li>Translate breaks language barriers</li>\n        </ul>\n        <FlashcardsChapter7 />\n        <ButtonGroup>\n          <Link to=\"/quiz-chapter-7\">📝 Quiz</Link>\n          <Link to=\"/\">🏠 Back to Home</Link>\n        </ButtonGroup>\n      </PageWrapper>\n    </Layout>\n  )\n}\n\nexport { Head }\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashcardsChapter7","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","ButtonGroup","PageWrapper","Chapter7Page","Layout","Link","to"],"sourceRoot":""}