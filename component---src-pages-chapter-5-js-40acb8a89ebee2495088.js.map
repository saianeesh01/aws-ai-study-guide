{"version":3,"file":"component---src-pages-chapter-5-js-40acb8a89ebee2495088.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/FlashcardsChapter5.js","webpack://gatsby-starter-default/./src/pages/chapter-5.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, isFullWidth = false }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: \"0 auto\",\n          maxWidth: isFullWidth ? \"100%\" : \"var(--size-content)\",\n          padding: isFullWidth ? \"0\" : \"var(--size-gutter)\",\n        }}\n      >\n        <main>{children}</main>\n        {!isFullWidth && (\n          <footer\n            style={{\n              marginTop: `var(--space-5)`,\n              fontSize: `var(--font-sm)`,\n              color: \"#888\",\n            }}\n          >\n            © {new Date().getFullYear()} · Built for AWS AI learners\n          </footer>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","// src/components/seo.js\nimport * as React from \"react\"\n\nexport function Head({ title, description = \"\" }) {\n  const siteTitle = \"AWS AI Study Guide\"\n  const siteDescription = description || \"Interactive learning for AWS AI\"\n  const siteUrl = \"https://saianeesh01.github.io/aws-ai-study-guide\"\n  const author = \"Aneesh Mussim\"\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      <meta name=\"description\" content={siteDescription} />\n      <meta property=\"og:title\" content={title || siteTitle} />\n      <meta property=\"og:description\" content={siteDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"twitter:title\" content={title || siteTitle} />\n      <meta name=\"twitter:description\" content={siteDescription} />\n    </>\n  )\n}\n","import * as React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst Card = styled.div`\n  background: #111;\n  border: 1px solid #00ff90;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 1rem;\n  text-align: center;\n  font-family: \"Courier New\", monospace;\n  color: #00ff90;\n  animation: ${fadeIn} 0.5s ease;\n  transition: transform 0.4s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`\n\nconst Button = styled.button`\n  background: #00ff90;\n  color: black;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  margin-top: 1rem;\n  border-radius: 6px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #00cc70;\n  }\n`\n\nfunction shuffleArray(array) {\n  return [...array].sort(() => Math.random() - 0.5)\n}\n\nconst flashcards = [\n    {\n      question: \"What is model training in machine learning?\",\n      answer: \"The process of teaching a model to recognize patterns in data by adjusting its parameters using training data.\"\n    },\n    {\n      question: \"What is model evaluation?\",\n      answer: \"Measuring a model’s performance on unseen data using metrics like accuracy, precision, and recall.\"\n    },\n    {\n      question: \"What is the purpose of training data?\",\n      answer: \"To allow the model to learn patterns and relationships between input features and labels.\"\n    },\n    {\n      question: \"What is the purpose of a validation set?\",\n      answer: \"To fine-tune the model and select the best hyperparameters before final testing.\"\n    },\n    {\n      question: \"What is the test set used for?\",\n      answer: \"To evaluate how well the model generalizes to unseen data.\"\n    },\n    {\n      question: \"What is overfitting?\",\n      answer: \"When a model performs well on training data but poorly on unseen data because it memorized instead of generalized.\"\n    },\n    {\n      question: \"What is underfitting?\",\n      answer: \"When a model is too simple to learn the patterns in the training data.\"\n    },\n    {\n      question: \"What is accuracy?\",\n      answer: \"The proportion of correct predictions out of all predictions made.\"\n    },\n    {\n      question: \"What is precision?\",\n      answer: \"The proportion of true positives among all predicted positives.\"\n    },\n    {\n      question: \"What is recall?\",\n      answer: \"The proportion of true positives identified among all actual positives.\"\n    },\n    {\n      question: \"What is the F1 score?\",\n      answer: \"The harmonic mean of precision and recall. Useful for imbalanced datasets.\"\n    },\n    {\n      question: \"What is RMSE?\",\n      answer: \"Root Mean Square Error — a regression metric that measures prediction error magnitude.\"\n    },\n    {\n      question: \"What is gradient descent?\",\n      answer: \"An optimization algorithm that updates model weights to minimize the loss function.\"\n    },\n    {\n      question: \"What is a loss function?\",\n      answer: \"A function that measures how far predictions are from actual labels.\"\n    },\n    {\n      question: \"What is early stopping?\",\n      answer: \"Stopping training when validation performance stops improving to prevent overfitting.\"\n    },\n    {\n      question: \"What is cross-validation?\",\n      answer: \"A technique to evaluate models by splitting data into multiple train/test sets.\"\n    },\n    {\n      question: \"What is a confusion matrix?\",\n      answer: \"A table showing true/false positives and negatives to assess classification performance.\"\n    },\n    {\n      question: \"Why use multiple metrics for evaluation?\",\n      answer: \"One metric may not reflect all aspects of performance, especially in imbalanced data.\"\n    },\n    {\n      question: \"What is batch training?\",\n      answer: \"Training the model using all data in batches instead of one data point at a time.\"\n    },\n    {\n      question: \"What is an epoch?\",\n      answer: \"One complete pass through the training dataset during training.\"\n    },\n    {\n      question: \"What is learning rate?\",\n      answer: \"A hyperparameter that determines the step size in gradient descent.\"\n    },\n    {\n      question: \"What happens if learning rate is too high?\",\n      answer: \"The model may oscillate or diverge instead of converging to a solution.\"\n    },\n    {\n      question: \"What is model bias?\",\n      answer: \"Error due to overly simplistic assumptions in the learning algorithm.\"\n    },\n    {\n      question: \"What is model variance?\",\n      answer: \"Error due to sensitivity to small fluctuations in the training data.\"\n    },\n    {\n      question: \"What does regularization do?\",\n      answer: \"Penalizes large weights to reduce overfitting and improve generalization.\"\n    },\n    {\n      question: \"What is L1 regularization?\",\n      answer: \"Adds the absolute value of weights to the loss function (Lasso).\"\n    },\n    {\n      question: \"What is L2 regularization?\",\n      answer: \"Adds the squared value of weights to the loss function (Ridge).\"\n    },\n    {\n      question: \"Why split data into train/val/test?\",\n      answer: \"To ensure the model learns, tunes, and generalizes properly.\"\n    },\n    {\n      question: \"What is model generalization?\",\n      answer: \"The ability of a model to perform well on new, unseen data.\"\n    },\n    {\n      question: \"What is hyperparameter tuning?\",\n      answer: \"Searching for the best values for settings like learning rate, batch size, etc.\"\n    }\n  ]\n  \n\nexport default function FlashcardsChapter5() {\n  const [shuffledCards] = React.useState(() => shuffleArray(flashcards))\n  const [index, setIndex] = React.useState(0)\n  const [showAnswer, setShowAnswer] = React.useState(false)\n\n  const nextCard = () => {\n    setShowAnswer(false)\n    setIndex((prev) => (prev + 1) % shuffledCards.length)\n  }\n\n  return (\n    <Card>\n      <h2>🧠 Flashcard {index + 1} of {shuffledCards.length}</h2>\n      <p>{shuffledCards[index].question}</p>\n      {showAnswer && <p><strong>Answer:</strong> {shuffledCards[index].answer}</p>}\n      <div>\n        <Button onClick={() => setShowAnswer((prev) => !prev)}>\n          {showAnswer ? \"Hide Answer\" : \"Show Answer\"}\n        </Button>\n        <Button onClick={nextCard} style={{ marginLeft: \"1rem\" }}>\n          Next\n        </Button>\n      </div>\n    </Card>\n  )\n}\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Head } from \"../components/seo\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport FlashcardsChapter5 from \"../components/FlashcardsChapter5\"\n\nconst ButtonGroup = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n\n  a {\n    background: #00ff90;\n    color: black;\n    padding: 0.75rem 1.5rem;\n    border-radius: 8px;\n    text-decoration: none;\n    font-weight: bold;\n    transition: background 0.3s ease;\n\n    &:hover {\n      background: #00cc70;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  background: black;\n  color: #00ff90;\n  font-family: \"Courier New\", monospace;\n  padding: 3rem 2rem;\n  min-height: 100vh;\n\n  h1, h2, h3 {\n    color: #00ff90;\n    margin-top: 2rem;\n  }\n\n  p, li {\n    line-height: 1.7;\n  }\n\n  ul {\n    margin-left: 1.5rem;\n  }\n\n  strong {\n    color: #00ffcc;\n  }\n\n  code {\n    background: #111;\n    padding: 0.2rem 0.4rem;\n    border-radius: 4px;\n    color: #00ffcc;\n  }\n`\n\nconst CodeBlock = styled.pre`\n  background: #111;\n  padding: 1rem;\n  border-radius: 8px;\n  margin: 1rem 0;\n  color: #00ffcc;\n  overflow-x: auto;\n`\n\nconst DiagramBox = styled.div`\n  background: #111;\n  border: 2px solid #00ff90;\n  border-radius: 10px;\n  padding: 1rem;\n  margin-top: 2rem;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.05);\n  }\n`\n\nexport default function Chapter5Page() {\n  return (\n    <Layout>\n      <Wrapper>\n        <h1>🧐 Chapter 5: Model Training & Evaluation</h1>\n        <p>\n          Training a machine learning model is the process of teaching it to recognize patterns in data. Evaluation determines how well the model performs on unseen data. This chapter walks through both stages.\n        </p>\n\n        <h2>🔧 Model Training</h2>\n        <ul>\n          <li><strong>Goal:</strong> Find the best parameters that minimize error on training data.</li>\n          <li><strong>Process:</strong> Feed training data into the algorithm, compute predictions, calculate error, and update the model.</li>\n        </ul>\n\n        <h3>Gradient Descent (Optimization)</h3>\n        <p>\n          A popular optimization algorithm that updates model weights to minimize loss.\n        </p>\n        <CodeBlock>{`\n# Pseudo-code\nfor epoch in range(epochs):\n  predictions = model(data)\n  loss = compute_loss(predictions, targets)\n  gradients = compute_gradients(loss)\n  update_weights(gradients)\n        `}</CodeBlock>\n\n        <h2>📊 Model Evaluation</h2>\n        <ul>\n          <li><strong>Purpose:</strong> Assess how well the model generalizes to unseen data.</li>\n          <li><strong>Common metrics:</strong> Accuracy, Precision, Recall, F1 Score, RMSE.</li>\n          <li><strong>Dataset split:</strong> Training / Validation / Test.</li>\n        </ul>\n\n        <h2>🌎 Real-World Applications</h2>\n        <ul>\n          <li><strong>Fraud Detection:</strong> Train on transaction patterns, evaluate on real-time purchases.</li>\n          <li><strong>Image Classification:</strong> Train CNNs to recognize images, evaluate with held-out image sets.</li>\n          <li><strong>Chatbots:</strong> Train models on conversations, evaluate on how natural responses are.</li>\n        </ul>\n\n        <h2>📊 Diagram: Training & Evaluation Flow</h2>\n        <DiagramBox>\n          <p>Raw Data ➡️ Preprocessing ➡️ Model Training ➡️ Evaluation ➡️ Metrics</p>\n        </DiagramBox>\n        <FlashcardsChapter5 />\n        <ButtonGroup>\n  <Link to=\"/quiz-chapter-5\">📝 Quiz</Link>\n  <Link to=\"/\">🏠 Back to Home</Link>\n</ButtonGroup>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport { Head }\n"],"names":["_ref","children","isFullWidth","React","style","margin","maxWidth","padding","marginTop","fontSize","color","Date","getFullYear","Head","title","description","siteTitle","siteDescription","name","content","property","fadeIn","keyframes","Card","styled","div","withConfig","displayName","componentId","Button","button","flashcards","question","answer","FlashcardsChapter5","shuffledCards","shuffleArray","array","_toConsumableArray","sort","Math","random","index","setIndex","showAnswer","setShowAnswer","length","onClick","prev","nextCard","marginLeft","ButtonGroup","Wrapper","CodeBlock","pre","DiagramBox","Chapter5Page","Layout","Link","to"],"sourceRoot":""}